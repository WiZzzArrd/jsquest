export interface Level {
  id: number;
  name: string;
  description: string;
  tutorial: string;
  taskTitle: string;
  taskDescription: string;
  expectedOutput: string;
  initialCode: string;
  solution: string;
  hints: string[];
}

export const levels: Level[] = [
  {
    id: 0,
    name: "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö",
    description: "–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ –≤ JavaScript.",
    tutorial: `üìñ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ JavaScript

–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ‚Äî —ç—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö.

–ü—Ä–∏–º–µ—Ä:
let name = "–ì–µ—Ä–æ–π";
const age = 25;
var score = 100;

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ let –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è.
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ const –¥–ª—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏–∑–º–µ–Ω—è—é—Ç—Å—è.
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ var –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ JavaScript (–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è).

–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:
‚Ä¢ –°—Ç—Ä–æ–∫–∞: "–ü—Ä–∏–≤–µ—Ç –º–∏—Ä"
‚Ä¢ –ß–∏—Å–ª–æ: 42, 3.14
‚Ä¢ –õ–æ–≥–∏—á–µ—Å–∫–∏–π: true, false
‚Ä¢ –ù–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π: undefined
‚Ä¢ –ù—É–ª–µ–≤–æ–π: null`,
    taskTitle: "* –ò—Å–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–º–∞–Ω–Ω—ã–π –∫–æ–¥ *",
    taskDescription: "–í –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –µ—Å—Ç—å –æ—à–∏–±–∫–∏. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö, —á—Ç–æ–±—ã –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ!",
    expectedOutput: "–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å –∏ –º–Ω–µ 25 –ª–µ—Ç.",
    initialCode: `let nam = "–ê–ª–µ–∫—Å;
const age = 25
var message = "–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç " + name + " –∏ –º–Ω–µ " + age + " –ª–µ—Ç."
console.log(messag);`,
    solution: `let name = "–ê–ª–µ–∫—Å";
const age = 25;
var message = "–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç " + name + " –∏ –º–Ω–µ " + age + " –ª–µ—Ç.";
console.log(message);`,
    hints: [
      "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö - –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏",
      "üí° –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Ç–æ—á–∫–∏ —Å –∑–∞–ø—è—Ç–æ–π –≤ –∫–æ–Ω—Ü–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ç—Ä–æ–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫–ª—é—á–µ–Ω—ã –≤ –∫–∞–≤—ã—á–∫–∏",
      "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä console.log –Ω–∞ –æ–ø–µ—á–∞—Ç–∫–∏"
    ]
  },
  {
    id: 1,
    name: "–§—É–Ω–∫—Ü–∏–∏",
    description: "–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á.",
    tutorial: `üìñ –§—É–Ω–∫—Ü–∏–∏ –≤ JavaScript

–§—É–Ω–∫—Ü–∏–∏ ‚Äî —ç—Ç–æ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á.

–°–∏–Ω—Ç–∞–∫—Å–∏—Å:
function functionName(parameters) {
  // –∫–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  return result;
}

–ü—Ä–∏–º–µ—Ä:
function greet(name) {
  return "–ü—Ä–∏–≤–µ—Ç, " + name + "!";
}

–°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
const add = (a, b) => a + b;

–í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π:
greet("–ê–ª–∏—Å–∞"); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: "–ü—Ä–∏–≤–µ—Ç, –ê–ª–∏—Å–∞!"
add(5, 3); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: 8`,
    taskTitle: "* –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—É–º–º—É.",
    expectedOutput: "–°—É–º–º–∞ 5 –∏ 3 —Ä–∞–≤–Ω–∞: 8",
    initialCode: `// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Å –∏–º–µ–Ω–µ–º 'add', –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
function add(a, b) {
  // –í–µ—Ä–Ω–∏—Ç–µ —Å—É–º–º—É a –∏ b
  
}

// –í—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
const result = add(5, 3);
console.log("–°—É–º–º–∞ 5 –∏ 3 —Ä–∞–≤–Ω–∞: " + result);`,
    solution: `function add(a, b) {
  return a + b;
}

const result = add(5, 3);
console.log("–°—É–º–º–∞ 5 –∏ 3 —Ä–∞–≤–Ω–∞: " + result);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ 'return' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏",
      "üí° –°–ª–æ–∂–∏—Ç–µ –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ +",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è",
      "üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ –≤–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–∏"
    ]
  },
  {
    id: 2,
    name: "–ú–∞—Å—Å–∏–≤—ã",
    description: "–•—Ä–∞–Ω–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –≤ –æ–¥–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –∏—Å–ø–æ–ª—å–∑—É—è –º–∞—Å—Å–∏–≤—ã.",
    tutorial: `üìñ –ú–∞—Å—Å–∏–≤—ã –≤ JavaScript

–ú–∞—Å—Å–∏–≤—ã —Ö—Ä–∞–Ω—è—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –≤ –æ–¥–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.

–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤:
const fruits = ["—è–±–ª–æ–∫–æ", "–±–∞–Ω–∞–Ω", "–∞–ø–µ–ª—å—Å–∏–Ω"];
const numbers = [1, 2, 3, 4, 5];

–î–æ—Å—Ç—É–ø –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º:
fruits[0] // "—è–±–ª–æ–∫–æ" (–ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç)
fruits[1] // "–±–∞–Ω–∞–Ω" (–≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç)

–°–≤–æ–π—Å—Ç–≤–∞ –º–∞—Å—Å–∏–≤–∞:
fruits.length // 3 (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤)

–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã:
‚Ä¢ push() - –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–æ–Ω–µ—Ü
‚Ä¢ pop() - —É–¥–∞–ª—è–µ—Ç —Å –∫–æ–Ω—Ü–∞
‚Ä¢ shift() - —É–¥–∞–ª—è–µ—Ç —Å –Ω–∞—á–∞–ª–∞
‚Ä¢ unshift() - –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–æ`,
    taskTitle: "* –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏ *",
    taskDescription: "–ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞.",
    expectedOutput: "–ü–µ—Ä–≤—ã–π —Ñ—Ä—É–∫—Ç: —è–±–ª–æ–∫–æ, –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ñ—Ä—É–∫—Ç: –≤–∏–Ω–æ–≥—Ä–∞–¥, –í—Å–µ–≥–æ —Ñ—Ä—É–∫—Ç–æ–≤: 4",
    initialCode: `const fruits = ["—è–±–ª–æ–∫–æ", "–±–∞–Ω–∞–Ω", "–∞–ø–µ–ª—å—Å–∏–Ω"];

// –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ñ—Ä—É–∫—Ç –≤ –∫–æ–Ω–µ—Ü
fruits.push("–≤–∏–Ω–æ–≥—Ä–∞–¥");

// –ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—ã–π —Ñ—Ä—É–∫—Ç
const firstFruit = fruits[];

// –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ñ—Ä—É–∫—Ç  
const lastFruit = fruits[fruits.length];

// –ü–æ–ª—É—á–∏—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ—Ä—É–∫—Ç–æ–≤
const totalFruits = fruits.length;

console.log("–ü–µ—Ä–≤—ã–π —Ñ—Ä—É–∫—Ç: " + firstFruit + ", –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ñ—Ä—É–∫—Ç: " + lastFruit + ", –í—Å–µ–≥–æ —Ñ—Ä—É–∫—Ç–æ–≤: " + totalFruits);`,
    solution: `const fruits = ["—è–±–ª–æ–∫–æ", "–±–∞–Ω–∞–Ω", "–∞–ø–µ–ª—å—Å–∏–Ω"];

fruits.push("–≤–∏–Ω–æ–≥—Ä–∞–¥");

const firstFruit = fruits[0];
const lastFruit = fruits[fruits.length - 1];
const totalFruits = fruits.length;

console.log("–ü–µ—Ä–≤—ã–π —Ñ—Ä—É–∫—Ç: " + firstFruit + ", –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ñ—Ä—É–∫—Ç: " + lastFruit + ", –í—Å–µ–≥–æ —Ñ—Ä—É–∫—Ç–æ–≤: " + totalFruits);`,
    hints: [
      "üí° –ò–Ω–¥–µ–∫—Å—ã –º–∞—Å—Å–∏–≤–∞ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0, –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç –∏–Ω–¥–µ–∫—Å 0",
      "üí° –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç –∏–Ω–¥–µ–∫—Å (length - 1)",
      "üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–∫–∞–∑–∞—Ç—å –∏–Ω–¥–µ–∫—Å –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º –º–∞—Å—Å–∏–≤–∞",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏ [] –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º –º–∞—Å—Å–∏–≤–∞"
    ]
  },
  {
    id: 3,
    name: "–û–±—ä–µ–∫—Ç—ã",
    description: "–ì—Ä—É–ø–ø–∏—Ä—É–π—Ç–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–º–µ—Å—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É—è –æ–±—ä–µ–∫—Ç—ã.",
    tutorial: `üìñ –û–±—ä–µ–∫—Ç—ã –≤ JavaScript

–û–±—ä–µ–∫—Ç—ã –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–º–µ—Å—Ç–µ.

–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤:
const person = {
  name: "–ò–≤–∞–Ω",
  age: 30,
  city: "–ú–æ—Å–∫–≤–∞"
};

–î–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º:
person.name // "–ò–≤–∞–Ω"
person["age"] // 30

–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤:
person.job = "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫";

–ú–µ—Ç–æ–¥—ã –≤ –æ–±—ä–µ–∫—Ç–∞—Ö:
const car = {
  brand: "Toyota",
  start: function() {
    return "–ú–∞—à–∏–Ω–∞ –∑–∞–≤–µ–¥–µ–Ω–∞!";
  }
};`,
    taskTitle: "* –°–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ *",
    taskDescription: "–ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –∏ –º–µ—Ç–æ–¥–∞–º –æ–±—ä–µ–∫—Ç–∞.",
    expectedOutput: "–ì–µ—Ä–æ–π: –ê–ª–∏—Å–∞, –£—Ä–æ–≤–µ–Ω—å: 5, –û—Ä—É–∂–∏–µ: –º–µ—á, –î–µ–π—Å—Ç–≤–∏–µ: –ê—Ç–∞–∫–∞ –º–µ—á–æ–º!",
    initialCode: `const hero = {
  name: "–ê–ª–∏—Å–∞",
  level: 5,
  weapon: "–º–µ—á",
  attack: function() {
    return "–ê—Ç–∞–∫–∞ " + this.weapon + "!";
  }
};

// –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –≥–µ—Ä–æ—è
const heroName = hero.;
const heroLevel = hero[""];
const heroWeapon = hero.weapon;

// –í—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ –∞—Ç–∞–∫–∏
const action = hero.();

console.log("–ì–µ—Ä–æ–π: " + heroName + ", –£—Ä–æ–≤–µ–Ω—å: " + heroLevel + ", –û—Ä—É–∂–∏–µ: " + heroWeapon + ", –î–µ–π—Å—Ç–≤–∏–µ: " + action);`,
    solution: `const hero = {
  name: "–ê–ª–∏—Å–∞",
  level: 5,
  weapon: "–º–µ—á",
  attack: function() {
    return "–ê—Ç–∞–∫–∞ " + this.weapon + "!";
  }
};

const heroName = hero.name;
const heroLevel = hero["level"];
const heroWeapon = hero.weapon;

const action = hero.attack();

console.log("–ì–µ—Ä–æ–π: " + heroName + ", –£—Ä–æ–≤–µ–Ω—å: " + heroLevel + ", –û—Ä—É–∂–∏–µ: " + heroWeapon + ", –î–µ–π—Å—Ç–≤–∏–µ: " + action);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–µ—á–Ω—É—é –Ω–æ—Ç–∞—Ü–∏—é (object.property) –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫–æ–±–æ—á–Ω—É—é –Ω–æ—Ç–∞—Ü–∏—é (object['property']) —Å –∫–∞–≤—ã—á–∫–∞–º–∏ –¥–ª—è –∏–º—ë–Ω —Å–≤–æ–π—Å—Ç–≤",
      "üí° –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Å–∫–æ–±–∫–∏ () –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –º–µ—Ç–æ–¥–æ–≤",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º"
    ]
  },
  {
    id: 4,
    name: "–£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã",
    description: "–ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏—è –≤ –∫–æ–¥–µ, –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã if/else.",
    tutorial: `üìñ –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –≤ JavaScript

–£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –∫–æ–¥—É –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è.

–û–ø–µ—Ä–∞—Ç–æ—Ä If:
if (—É—Å–ª–æ–≤–∏–µ) {
  // –∫–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ
}

If-Else:
if (—É—Å–ª–æ–≤–∏–µ) {
  // –∫–æ–¥, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ
} else {
  // –∫–æ–¥, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –ª–æ–∂–Ω–æ
}

If-Else If:
if (—É—Å–ª–æ–≤–∏–µ1) {
  // –∫–æ–¥, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ1 –∏—Å—Ç–∏–Ω–Ω–æ
} else if (—É—Å–ª–æ–≤–∏–µ2) {
  // –∫–æ–¥, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ2 –∏—Å—Ç–∏–Ω–Ω–æ
} else {
  // –∫–æ–¥, –µ—Å–ª–∏ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –ª–æ–∂–Ω—ã
}

–û–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:
‚Ä¢ === (—Ä–∞–≤–Ω–æ)
‚Ä¢ !== (–Ω–µ —Ä–∞–≤–Ω–æ)
‚Ä¢ > (–±–æ–ª—å—à–µ)
‚Ä¢ < (–º–µ–Ω—å—à–µ)
‚Ä¢ >= (–±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ)
‚Ä¢ <= (–º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ)`,
    taskTitle: "* –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *",
    taskDescription: "–ó–∞–≤–µ—Ä—à–∏—Ç–µ —É—Å–ª–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞.",
    expectedOutput: "–í–æ–∑—Ä–∞—Å—Ç 25: –í—ã –≤–∑—Ä–æ—Å–ª—ã–π.",
    initialCode: `const age = 25;
let category;

if (age < 13) {
  category = "–í—ã —Ä–µ–±—ë–Ω–æ–∫.";
} else if (age < 20) {
  category = "–í—ã –ø–æ–¥—Ä–æ—Å—Ç–æ–∫.";
} else if (age < 60) {
  category = "–í—ã –≤–∑—Ä–æ—Å–ª—ã–π.";
} {
  category = "–í—ã –ø–æ–∂–∏–ª–æ–π.";
}

console.log("–í–æ–∑—Ä–∞—Å—Ç " + age + ": " + category);`,
    solution: `const age = 25;
let category;

if (age < 13) {
  category = "–í—ã —Ä–µ–±—ë–Ω–æ–∫.";
} else if (age < 20) {
  category = "–í—ã –ø–æ–¥—Ä–æ—Å—Ç–æ–∫.";
} else if (age < 60) {
  category = "–í—ã –≤–∑—Ä–æ—Å–ª—ã–π.";
} else {
  category = "–í—ã –ø–æ–∂–∏–ª–æ–π.";
}

console.log("–í–æ–∑—Ä–∞—Å—Ç " + age + ": " + category);`,
    hints: [
      "üí° –§–∏–Ω–∞–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'else', –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –±–ª–æ–∫",
      "üí° –ö–∞–∂–¥–æ–µ —É—Å–ª–æ–≤–∏–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–µ–Ω—å—à–µ –ª–∏ –≤–æ–∑—Ä–∞—Å—Ç –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –≤–∞—à–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã if-else –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω—ã",
      "üí° –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ 'else' –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏"
    ]
  },
  {
    id: 5,
    name: "–¶–∏–∫–ª—ã",
    description: "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è —Ü–∏–∫–ª—ã for –∏ while.",
    tutorial: `üìñ –¶–∏–∫–ª—ã –≤ JavaScript

–¶–∏–∫–ª—ã –ø–æ–≤—Ç–æ—Ä—è—é—Ç –∫–æ–¥ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–∞–∑.

–¶–∏–∫–ª For:
for (let i = 0; i < 5; i++) {
  console.log(i); // 0, 1, 2, 3, 4
}

–¶–∏–∫–ª While:
let count = 0;
while (count < 3) {
  console.log(count);
  count++;
}

–¶–∏–∫–ª For...of (–¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤):
const fruits = ["—è–±–ª–æ–∫–æ", "–±–∞–Ω–∞–Ω"];
for (const fruit of fruits) {
  console.log(fruit);
}

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ü–∏–∫–ª–∞:
‚Ä¢ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: let i = 0
‚Ä¢ –£—Å–ª–æ–≤–∏–µ: i < 5
‚Ä¢ –ü—Ä–∏—Ä–∞—â–µ–Ω–∏–µ: i++`,
    taskTitle: "* –°—á—ë—Ç—á–∏–∫ —á–∏—Å–µ–ª *",
    taskDescription: "–ò—Å–ø—Ä–∞–≤—å—Ç–µ —Ü–∏–∫–ª –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –æ—Ç 1 –¥–æ 5 –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—É–º–º—ã.",
    expectedOutput: "–ß–∏—Å–ª–∞: 1 2 3 4 5 –°—É–º–º–∞: 15",
    initialCode: `let numbers = "";
let sum = 0;

// –ò—Å–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Ü–∏–∫–ª –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –æ—Ç 1 –¥–æ 5
for (let i = 1; i  5; i++) {
  numbers += i + " ";
  sum += ;
}

console.log("–ß–∏—Å–ª–∞: " + numbers + "–°—É–º–º–∞: " + sum);`,
    solution: `let numbers = "";
let sum = 0;

for (let i = 1; i <= 5; i++) {
  numbers += i + " ";
  sum += i;
}

console.log("–ß–∏—Å–ª–∞: " + numbers + "–°—É–º–º–∞: " + sum);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <= (–º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ) —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å —á–∏—Å–ª–æ 5",
      "üí° –î–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 'i' –∫ —Å—É–º–º–µ",
      "üí° –£—Å–ª–æ–≤–∏–µ —Ü–∏–∫–ª–∞ –¥–æ–ª–∂–Ω–æ –ø–æ–∑–≤–æ–ª–∏—Ç—å i –¥–æ—Å—Ç–∏—á—å 5",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∫–ª—é—á–∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Ü–∏–∫–ª–∞ –≤ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—É–º–º—ã"
    ]
  },
  {
    id: 6,
    name: "–†–∞–±–æ—Ç–∞ —Å DOM",
    description: "–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∏—Å–ø–æ–ª—å–∑—É—è –æ–±—ä–µ–∫—Ç–Ω—É—é –º–æ–¥–µ–ª—å –¥–æ–∫—É–º–µ–Ω—Ç–∞.",
    tutorial: `üìñ –†–∞–±–æ—Ç–∞ —Å DOM –≤ JavaScript

DOM –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å HTML —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏.

–í—ã–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
document.getElementById("myId")
document.querySelector(".myClass")
document.querySelectorAll("p")

–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:
element.textContent = "–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç";
element.innerHTML = "<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>";

–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π:
element.style.color = "red";
element.style.backgroundColor = "blue";

–°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
const newDiv = document.createElement("div");
newDiv.textContent = "–ü—Ä–∏–≤–µ—Ç!";
document.body.appendChild(newDiv);

–°–æ–±—ã—Ç–∏—è:
element.addEventListener("click", function() {
  console.log("–ù–∞–∂–∞—Ç–æ!");
});`,
    taskTitle: "* –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ *",
    taskDescription: "–ó–∞–≤–µ—Ä—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.",
    expectedOutput: "–¢–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: –ü—Ä–∏–≤–µ—Ç, JavaScript!",
    initialCode: `// –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–ª–æ –±—ã)
const mockElement = {
  textContent: "–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç",
  style: {}
};

// –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
mockElement. = "–ü—Ä–∏–≤–µ—Ç, JavaScript!";

// –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∏–ª—å
mockElement.style. = "blue";

console.log("–¢–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: " + mockElement.textContent);
console.log("–¶–≤–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: " + mockElement.style.color);`,
    solution: `const mockElement = {
  textContent: "–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç",
  style: {}
};

mockElement.textContent = "–ü—Ä–∏–≤–µ—Ç, JavaScript!";
mockElement.style.color = "blue";

console.log("–¢–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: " + mockElement.textContent);
console.log("–¶–≤–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: " + mockElement.style.color);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ 'textContent' –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–∞",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'style.color' –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞",
      "üí° –ü–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –æ–±—ä–µ–∫—Ç–∞ —Å –ø–æ–º–æ—â—å—é —Ç–æ—á–µ—á–Ω–æ–π –Ω–æ—Ç–∞—Ü–∏–∏",
      "üí° –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è (=)"
    ]
  },
  {
    id: 7,
    name: "–°–æ–±—ã—Ç–∏—è",
    description: "–†–µ–∞–≥–∏—Ä—É–π—Ç–µ –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–∞–∫–∏–µ –∫–∞–∫ –∫–ª–∏–∫–∏, –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º.",
    tutorial: `üìñ –°–æ–±—ã—Ç–∏—è –≤ JavaScript

–°–æ–±—ã—Ç–∏—è –ø–æ–∑–≤–æ–ª—è—é—Ç –∫–æ–¥—É —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π:
element.addEventListener("click", function() {
  console.log("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞!");
});

–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è:
‚Ä¢ click - –∫–ª–∏–∫ –º—ã—à–∏
‚Ä¢ keydown - –Ω–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞
‚Ä¢ submit - –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ñ–æ—Ä–º–∞
‚Ä¢ load - —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
‚Ä¢ change - –∏–∑–º–µ–Ω—ë–Ω –≤–≤–æ–¥

–û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è:
element.addEventListener("click", function(event) {
  console.log("–ö–ª–∏–∫ –≤:", event.clientX, event.clientY);
  event.preventDefault(); // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
});

–°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
element.addEventListener("click", (event) => {
  console.log("–°–æ–±—ã—Ç–∏–µ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏!");
});`,
    taskTitle: "* –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π *",
    taskDescription: "–ó–∞–≤–µ—Ä—à–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏.",
    expectedOutput: "–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞! –°—á—ë—Ç: 1",
    initialCode: `// –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ –∫–Ω–æ–ø–∫–∏
const mockButton = {
  clickHandlers: [],
  addEventListener: function(event, handler) {
    this.clickHandlers.push(handler);
  },
  click: function() {
    this.clickHandlers.forEach(handler => handler());
  }
};

let clickCount = 0;

// –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Å–æ–±—ã—Ç–∏–π –∫–ª–∏–∫–∞
mockButton.addEventListener("", function() {
  clickCount++;
  console.log("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞! –°—á—ë—Ç: " + clickCount);
});

// –ò–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
mockButton.click();`,
    solution: `const mockButton = {
  clickHandlers: [],
  addEventListener: function(event, handler) {
    this.clickHandlers.push(handler);
  },
  click: function() {
    this.clickHandlers.forEach(handler => handler());
  }
};

let clickCount = 0;

mockButton.addEventListener("click", function() {
  clickCount++;
  console.log("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞! –°—á—ë—Ç: " + clickCount);
});

mockButton.click();`,
    hints: [
      "üí° –ü–µ—Ä–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–º–µ–Ω–µ–º —Å–æ–±—ã—Ç–∏—è –≤ –∫–∞–≤—ã—á–∫–∞—Ö",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'click' –∫–∞–∫ –∏–º—è —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–ª–∏–∫–æ–≤ –º—ã—à–∏",
      "üí° –ò–º–µ–Ω–∞ —Å–æ–±—ã—Ç–∏–π ‚Äî —ç—Ç–æ —Å—Ç—Ä–æ–∫–∏, –ø–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω—ã –∫–∞–≤—ã—á–∫–∏",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–º—è —Å–æ–±—ã—Ç–∏—è —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞–µ—Ç"
    ]
  },
  {
    id: 8,
    name: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫",
    description: "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–π—Ç–µ –æ—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ, –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã try-catch.",
    tutorial: `üìñ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ JavaScript

–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–∞–¥–µ–Ω–∏–µ –∫–æ–¥–∞ –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º.

Try-Catch:
try {
  // –ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É
  const result = riskyOperation();
  console.log(result);
} catch (error) {
  // –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É
  console.log("–û—à–∏–±–∫–∞:", error.message);
}

Try-Catch-Finally:
try {
  // –†–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥
} catch (error) {
  // –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É
} finally {
  // –í—Å–µ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
}

–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—à–∏–±–æ–∫:
if (age < 0) {
  throw new Error("–í–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º");
}

–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫:
‚Ä¢ ReferenceError - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
‚Ä¢ TypeError - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ SyntaxError - —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞`,
    taskTitle: "* –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ *",
    taskDescription: "–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫.",
    expectedOutput: "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞: –ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å",
    initialCode: `function divide(a, b) {
  if (b === 0) {
    throw new Error("–ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å");
  }
  return a / b;
}

// –î–æ–±–∞–≤–∏—Ç—å try-catch –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–∫–∏
 {
  const result = divide(10, 0);
  console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç:", result);
}  (error) {
  console.log("–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞:", error.message);
}`,
    solution: `function divide(a, b) {
  if (b === 0) {
    throw new Error("–ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å");
  }
  return a / b;
}

try {
  const result = divide(10, 0);
  console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç:", result);
} catch (error) {
  console.log("–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞:", error.message);
}`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ 'try' –¥–ª—è –Ω–∞—á–∞–ª–∞ –±–ª–æ–∫–∞ try",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ 'catch' –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫",
      "üí° –°—Ç—Ä—É–∫—Ç—É—Ä–∞ try-catch –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –æ–±–æ–∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö",
      "üí° –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –≤ –±–ª–æ–∫ try"
    ]
  },
  {
    id: 9,
    name: "–§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤",
    description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –≤ —ç—Ç–æ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–º –∏—Å–ø—ã—Ç–∞–Ω–∏–∏.",
    tutorial: `üìñ –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤

–≠—Ç–æ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å—ë, —á—Ç–æ –≤—ã –∏–∑—É—á–∏–ª–∏:
‚Ä¢ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –§—É–Ω–∫—Ü–∏–∏
‚Ä¢ –ú–∞—Å—Å–∏–≤—ã –∏ –æ–±—ä–µ–∫—Ç—ã
‚Ä¢ –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã
‚Ä¢ –¶–∏–∫–ª—ã
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å DOM
‚Ä¢ –°–æ–±—ã—Ç–∏—è
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

–í—ã —Å–æ–∑–¥–∞–¥–∏—Ç–µ –ø–æ–ª–Ω—É—é –º–∏–Ω–∏-–ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∫–æ–Ω—Ü–µ–ø—Ü–∏–π JavaScript –≤–º–µ—Å—Ç–µ.

–°–æ–≤–µ—Ç—ã:
‚Ä¢ –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —á–∏—Ç–∞–π—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
‚Ä¢ –†–∞–∑–±–∏–≤–∞–π—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –Ω–∞ –º–µ–Ω—å—à–∏–µ —á–∞—Å—Ç–∏
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ console.log –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∫–æ–¥–∞
‚Ä¢ –ù–µ –±–æ–π—Ç–µ—Å—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å!

–£–¥–∞—á–∏, –æ—Ç–≤–∞–∂–Ω—ã–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç!`,
    taskTitle: "* –ì–ª–∞–≤–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ—Ü–µ–Ω–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.",
    expectedOutput: "–°—Ç—É–¥–µ–Ω—Ç: –ê–ª–∏—Å–∞, –û—Ü–µ–Ω–∫–∞: B, –°—Ç–∞—Ç—É—Å: –°–¥–∞–ª\n–°—Ç—É–¥–µ–Ω—Ç: –ë–æ–±, –û—Ü–µ–Ω–∫–∞: D, –°—Ç–∞—Ç—É—Å: –ù–µ —Å–¥–∞–ª\n–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –∫–ª–∞—Å—Å–∞: 72.5",
    initialCode: `// –ó–∞–≤–µ—Ä—à–∏—Ç–µ —ç—Ç–æ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ—Ü–µ–Ω–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
const students = [
  { name: "–ê–ª–∏—Å–∞", scores: [85, 92, 78, 96] },
  { name: "–ë–æ–±", scores: [45, 67, 58, 72] }
];

function calculateAverage(scores) {
  // –í—ã—á–∏—Å–ª–∏—Ç–µ –∏ –≤–µ—Ä–Ω–∏—Ç–µ —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –æ—Ü–µ–Ω–æ–∫
  
}

function getLetterGrade(average) {
  // –í–µ—Ä–Ω–∏—Ç–µ –±—É–∫–≤–µ–Ω–Ω—É—é –æ—Ü–µ–Ω–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞
  // A: 90+, B: 80-89, C: 70-79, D: 60-69, F: –Ω–∏–∂–µ 60
  
}

function getPassStatus(average) {
  // –í–µ—Ä–Ω–∏—Ç–µ "–°–¥–∞–ª" –µ—Å–ª–∏ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª >= 70, "–ù–µ —Å–¥–∞–ª" –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
  
}

// –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
let classTotal = 0;
for (const student of students) {
  const average = calculateAverage(student.scores);
  const grade = getLetterGrade(average);
  const status = getPassStatus(average);
  
  console.log(\`–°—Ç—É–¥–µ–Ω—Ç: \${student.name}, –û—Ü–µ–Ω–∫–∞: \${grade}, –°—Ç–∞—Ç—É—Å: \${status}\`);
  classTotal += average;
}

// –í—ã—á–∏—Å–ª–∏—Ç—å –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –∫–ª–∞—Å—Å–∞
const classAverage = classTotal / students.length;
console.log("–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –∫–ª–∞—Å—Å–∞: " + classAverage);`,
    solution: `const students = [
  { name: "Alice", scores: [85, 92, 78, 96] },
  { name: "Bob", scores: [45, 67, 58, 72] }
];

function calculateAverage(scores) {
  let sum = 0;
  for (const score of scores) {
    sum += score;
  }
  return sum / scores.length;
}

function getLetterGrade(average) {
  if (average >= 90) {
    return "A";
  } else if (average >= 80) {
    return "B";
  } else if (average >= 70) {
    return "C";
  } else if (average >= 60) {
    return "D";
  } else {
    return "F";
  }
}

function getPassStatus(average) {
  if (average >= 70) {
    return "Pass";
  } else {
    return "Fail";
  }
}

let classTotal = 0;
for (const student of students) {
  const average = calculateAverage(student.scores);
  const grade = getLetterGrade(average);
  const status = getPassStatus(average);
  
  console.log(\`Student: \${student.name}, Grade: \${grade}, Status: \${status}\`);
  classTotal += average;
}

const classAverage = classTotal / students.length;
console.log("Class Average: " + classAverage);`,
    hints: [
      "üí° Use a loop to sum all scores, then divide by the length",
      "üí° Use if-else statements to determine letter grades",
      "üí° Compare the average to 70 for pass/fail status",
      "üí° Don't forget to return values from your functions"
    ]
  }
];
