export interface Level {
  id: number;
  name: string;
  description: string;
  tutorial: string;
  taskTitle: string;
  taskDescription: string;
  expectedOutput: string;
  initialCode: string;
  solution: string;
  hints: string[];
}

export const levels: Level[] = [
  {
    id: 0,
    name: "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö",
    description: "–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ –≤ JavaScript.",
    tutorial: `üìñ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ JavaScript

–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ‚Äî —ç—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö.

–ü—Ä–∏–º–µ—Ä:
let name = "–ì–µ—Ä–æ–π";
const age = 25;
var score = 100;

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ let –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è.
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ const –¥–ª—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏–∑–º–µ–Ω—è—é—Ç—Å—è.
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ var –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ JavaScript (–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è).

–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:
‚Ä¢ –°—Ç—Ä–æ–∫–∞: "–ü—Ä–∏–≤–µ—Ç –º–∏—Ä"
‚Ä¢ –ß–∏—Å–ª–æ: 42, 3.14
‚Ä¢ –õ–æ–≥–∏—á–µ—Å–∫–∏–π: true, false
‚Ä¢ –ù–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π: undefined
‚Ä¢ –ù—É–ª–µ–≤–æ–π: null`,
    taskTitle: "* –ò—Å–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–º–∞–Ω–Ω—ã–π –∫–æ–¥ *",
    taskDescription: "–í –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –µ—Å—Ç—å –æ—à–∏–±–∫–∏. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö, —á—Ç–æ–±—ã –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ!",
    expectedOutput: "–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å –∏ –º–Ω–µ 25 –ª–µ—Ç.",
    initialCode: `let nam = "–ê–ª–µ–∫—Å;
const age = 25
var message = "–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç " + name + " –∏ –º–Ω–µ " + age + " –ª–µ—Ç."
console.log(messag);`,
    solution: `let name = "–ê–ª–µ–∫—Å";
const age = 25;
var message = "–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç " + name + " –∏ –º–Ω–µ " + age + " –ª–µ—Ç.";
console.log(message);`,
    hints: [
      "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö - –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏",
      "üí° –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Ç–æ—á–∫–∏ —Å –∑–∞–ø—è—Ç–æ–π –≤ –∫–æ–Ω—Ü–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ç—Ä–æ–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫–ª—é—á–µ–Ω—ã –≤ –∫–∞–≤—ã—á–∫–∏",
      "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä console.log –Ω–∞ –æ–ø–µ—á–∞—Ç–∫–∏"
    ]
  },
  {
    id: 1,
    name: "–§—É–Ω–∫—Ü–∏–∏",
    description: "–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á.",
    tutorial: `üìñ –§—É–Ω–∫—Ü–∏–∏ –≤ JavaScript

–§—É–Ω–∫—Ü–∏–∏ ‚Äî —ç—Ç–æ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á.

–°–∏–Ω—Ç–∞–∫—Å–∏—Å:
function functionName(parameters) {
  // –∫–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  return result;
}

–ü—Ä–∏–º–µ—Ä:
function greet(name) {
  return "–ü—Ä–∏–≤–µ—Ç, " + name + "!";
}

–°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
const add = (a, b) => a + b;

–í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π:
greet("–ê–ª–∏—Å–∞"); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: "–ü—Ä–∏–≤–µ—Ç, –ê–ª–∏—Å–∞!"
add(5, 3); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: 8`,
    taskTitle: "* –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—É–º–º—É.",
    expectedOutput: "–°—É–º–º–∞ 5 –∏ 3 —Ä–∞–≤–Ω–∞: 8",
    initialCode: `// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Å –∏–º–µ–Ω–µ–º 'add', –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
function add(a, b) {
  // –í–µ—Ä–Ω–∏—Ç–µ —Å—É–º–º—É a –∏ b
  
}

// –í—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
const result = add(5, 3);
console.log("–°—É–º–º–∞ 5 –∏ 3 —Ä–∞–≤–Ω–∞: " + result);`,
    solution: `function add(a, b) {
  return a + b;
}

const result = add(5, 3);
console.log("–°—É–º–º–∞ 5 –∏ 3 —Ä–∞–≤–Ω–∞: " + result);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ 'return' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏",
      "üí° –°–ª–æ–∂–∏—Ç–µ –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ +",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è",
      "üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ –≤–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–∏"
    ]
  },
  {
    id: 2,
    name: "–ú–∞—Å—Å–∏–≤—ã",
    description: "–•—Ä–∞–Ω–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –≤ –æ–¥–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –∏—Å–ø–æ–ª—å–∑—É—è –º–∞—Å—Å–∏–≤—ã.",
    tutorial: `üìñ –ú–∞—Å—Å–∏–≤—ã –≤ JavaScript

–ú–∞—Å—Å–∏–≤—ã —Ö—Ä–∞–Ω—è—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –≤ –æ–¥–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.

–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤:
const fruits = ["—è–±–ª–æ–∫–æ", "–±–∞–Ω–∞–Ω", "–∞–ø–µ–ª—å—Å–∏–Ω"];
const numbers = [1, 2, 3, 4, 5];

–î–æ—Å—Ç—É–ø –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º:
fruits[0] // "—è–±–ª–æ–∫–æ" (–ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç)
fruits[1] // "–±–∞–Ω–∞–Ω" (–≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç)

–°–≤–æ–π—Å—Ç–≤–∞ –º–∞—Å—Å–∏–≤–∞:
fruits.length // 3 (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤)

–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã:
‚Ä¢ push() - –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–æ–Ω–µ—Ü
‚Ä¢ pop() - —É–¥–∞–ª—è–µ—Ç —Å –∫–æ–Ω—Ü–∞
‚Ä¢ shift() - —É–¥–∞–ª—è–µ—Ç —Å –Ω–∞—á–∞–ª–∞
‚Ä¢ unshift() - –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–æ`,
    taskTitle: "* –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏ *",
    taskDescription: "–ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞.",
    expectedOutput: "–ü–µ—Ä–≤—ã–π —Ñ—Ä—É–∫—Ç: —è–±–ª–æ–∫–æ, –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ñ—Ä—É–∫—Ç: –≤–∏–Ω–æ–≥—Ä–∞–¥, –í—Å–µ–≥–æ —Ñ—Ä—É–∫—Ç–æ–≤: 4",
    initialCode: `const fruits = ["—è–±–ª–æ–∫–æ", "–±–∞–Ω–∞–Ω", "–∞–ø–µ–ª—å—Å–∏–Ω"];

// –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ñ—Ä—É–∫—Ç –≤ –∫–æ–Ω–µ—Ü
fruits.push("–≤–∏–Ω–æ–≥—Ä–∞–¥");

// –ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—ã–π —Ñ—Ä—É–∫—Ç
const firstFruit = fruits[];

// –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ñ—Ä—É–∫—Ç  
const lastFruit = fruits[fruits.length];

// –ü–æ–ª—É—á–∏—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ—Ä—É–∫—Ç–æ–≤
const totalFruits = fruits.length;

console.log("–ü–µ—Ä–≤—ã–π —Ñ—Ä—É–∫—Ç: " + firstFruit + ", –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ñ—Ä—É–∫—Ç: " + lastFruit + ", –í—Å–µ–≥–æ —Ñ—Ä—É–∫—Ç–æ–≤: " + totalFruits);`,
    solution: `const fruits = ["—è–±–ª–æ–∫–æ", "–±–∞–Ω–∞–Ω", "–∞–ø–µ–ª—å—Å–∏–Ω"];

fruits.push("–≤–∏–Ω–æ–≥—Ä–∞–¥");

const firstFruit = fruits[0];
const lastFruit = fruits[fruits.length - 1];
const totalFruits = fruits.length;

console.log("–ü–µ—Ä–≤—ã–π —Ñ—Ä—É–∫—Ç: " + firstFruit + ", –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ñ—Ä—É–∫—Ç: " + lastFruit + ", –í—Å–µ–≥–æ —Ñ—Ä—É–∫—Ç–æ–≤: " + totalFruits);`,
    hints: [
      "üí° –ò–Ω–¥–µ–∫—Å—ã –º–∞—Å—Å–∏–≤–∞ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0, –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç –∏–Ω–¥–µ–∫—Å 0",
      "üí° –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç –∏–Ω–¥–µ–∫—Å (length - 1)",
      "üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–∫–∞–∑–∞—Ç—å –∏–Ω–¥–µ–∫—Å –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º –º–∞—Å—Å–∏–≤–∞",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏ [] –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º –º–∞—Å—Å–∏–≤–∞"
    ]
  },
  {
    id: 3,
    name: "–û–±—ä–µ–∫—Ç—ã",
    description: "–ì—Ä—É–ø–ø–∏—Ä—É–π—Ç–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–º–µ—Å—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É—è –æ–±—ä–µ–∫—Ç—ã.",
    tutorial: `üìñ –û–±—ä–µ–∫—Ç—ã –≤ JavaScript

–û–±—ä–µ–∫—Ç—ã –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–º–µ—Å—Ç–µ.

–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤:
const person = {
  name: "–ò–≤–∞–Ω",
  age: 30,
  city: "–ú–æ—Å–∫–≤–∞"
};

–î–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º:
person.name // "–ò–≤–∞–Ω"
person["age"] // 30

–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤:
person.job = "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫";

–ú–µ—Ç–æ–¥—ã –≤ –æ–±—ä–µ–∫—Ç–∞—Ö:
const car = {
  brand: "Toyota",
  start: function() {
    return "–ú–∞—à–∏–Ω–∞ –∑–∞–≤–µ–¥–µ–Ω–∞!";
  }
};`,
    taskTitle: "* –°–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ *",
    taskDescription: "–ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –∏ –º–µ—Ç–æ–¥–∞–º –æ–±—ä–µ–∫—Ç–∞.",
    expectedOutput: "–ì–µ—Ä–æ–π: –ê–ª–∏—Å–∞, –£—Ä–æ–≤–µ–Ω—å: 5, –û—Ä—É–∂–∏–µ: –º–µ—á, –î–µ–π—Å—Ç–≤–∏–µ: –ê—Ç–∞–∫–∞ –º–µ—á–æ–º!",
    initialCode: `const hero = {
  name: "–ê–ª–∏—Å–∞",
  level: 5,
  weapon: "–º–µ—á",
  attack: function() {
    return "–ê—Ç–∞–∫–∞ " + this.weapon + "!";
  }
};

// –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –≥–µ—Ä–æ—è
const heroName = hero.;
const heroLevel = hero[""];
const heroWeapon = hero.weapon;

// –í—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ –∞—Ç–∞–∫–∏
const action = hero.();

console.log("–ì–µ—Ä–æ–π: " + heroName + ", –£—Ä–æ–≤–µ–Ω—å: " + heroLevel + ", –û—Ä—É–∂–∏–µ: " + heroWeapon + ", –î–µ–π—Å—Ç–≤–∏–µ: " + action);`,
    solution: `const hero = {
  name: "–ê–ª–∏—Å–∞",
  level: 5,
  weapon: "–º–µ—á",
  attack: function() {
    return "–ê—Ç–∞–∫–∞ " + this.weapon + "!";
  }
};

const heroName = hero.name;
const heroLevel = hero["level"];
const heroWeapon = hero.weapon;

const action = hero.attack();

console.log("–ì–µ—Ä–æ–π: " + heroName + ", –£—Ä–æ–≤–µ–Ω—å: " + heroLevel + ", –û—Ä—É–∂–∏–µ: " + heroWeapon + ", –î–µ–π—Å—Ç–≤–∏–µ: " + action);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–µ—á–Ω—É—é –Ω–æ—Ç–∞—Ü–∏—é (object.property) –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫–æ–±–æ—á–Ω—É—é –Ω–æ—Ç–∞—Ü–∏—é (object['property']) —Å –∫–∞–≤—ã—á–∫–∞–º–∏ –¥–ª—è –∏–º—ë–Ω —Å–≤–æ–π—Å—Ç–≤",
      "üí° –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Å–∫–æ–±–∫–∏ () –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –º–µ—Ç–æ–¥–æ–≤",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º"
    ]
  },
  {
    id: 4,
    name: "–£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã",
    description: "–ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏—è –≤ –∫–æ–¥–µ, –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã if/else.",
    tutorial: `üìñ –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –≤ JavaScript

–£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –∫–æ–¥—É –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è.

–û–ø–µ—Ä–∞—Ç–æ—Ä If:
if (—É—Å–ª–æ–≤–∏–µ) {
  // –∫–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ
}

If-Else:
if (—É—Å–ª–æ–≤–∏–µ) {
  // –∫–æ–¥, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ
} else {
  // –∫–æ–¥, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –ª–æ–∂–Ω–æ
}

If-Else If:
if (—É—Å–ª–æ–≤–∏–µ1) {
  // –∫–æ–¥, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ1 –∏—Å—Ç–∏–Ω–Ω–æ
} else if (—É—Å–ª–æ–≤–∏–µ2) {
  // –∫–æ–¥, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ2 –∏—Å—Ç–∏–Ω–Ω–æ
} else {
  // –∫–æ–¥, –µ—Å–ª–∏ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –ª–æ–∂–Ω—ã
}

–û–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:
‚Ä¢ === (—Ä–∞–≤–Ω–æ)
‚Ä¢ !== (–Ω–µ —Ä–∞–≤–Ω–æ)
‚Ä¢ > (–±–æ–ª—å—à–µ)
‚Ä¢ < (–º–µ–Ω—å—à–µ)
‚Ä¢ >= (–±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ)
‚Ä¢ <= (–º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ)`,
    taskTitle: "* –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *",
    taskDescription: "–ó–∞–≤–µ—Ä—à–∏—Ç–µ —É—Å–ª–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞.",
    expectedOutput: "–í–æ–∑—Ä–∞—Å—Ç 25: –í—ã –≤–∑—Ä–æ—Å–ª—ã–π.",
    initialCode: `const age = 25;
let category;

if (age < 13) {
  category = "–í—ã —Ä–µ–±—ë–Ω–æ–∫.";
} else if (age < 20) {
  category = "–í—ã –ø–æ–¥—Ä–æ—Å—Ç–æ–∫.";
} else if (age < 60) {
  category = "–í—ã –≤–∑—Ä–æ—Å–ª—ã–π.";
} {
  category = "–í—ã –ø–æ–∂–∏–ª–æ–π.";
}

console.log("–í–æ–∑—Ä–∞—Å—Ç " + age + ": " + category);`,
    solution: `const age = 25;
let category;

if (age < 13) {
  category = "–í—ã —Ä–µ–±—ë–Ω–æ–∫.";
} else if (age < 20) {
  category = "–í—ã –ø–æ–¥—Ä–æ—Å—Ç–æ–∫.";
} else if (age < 60) {
  category = "–í—ã –≤–∑—Ä–æ—Å–ª—ã–π.";
} else {
  category = "–í—ã –ø–æ–∂–∏–ª–æ–π.";
}

console.log("–í–æ–∑—Ä–∞—Å—Ç " + age + ": " + category);`,
    hints: [
      "üí° –§–∏–Ω–∞–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'else', –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –±–ª–æ–∫",
      "üí° –ö–∞–∂–¥–æ–µ —É—Å–ª–æ–≤–∏–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–µ–Ω—å—à–µ –ª–∏ –≤–æ–∑—Ä–∞—Å—Ç –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –≤–∞—à–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã if-else –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω—ã",
      "üí° –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ 'else' –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏"
    ]
  },
  {
    id: 5,
    name: "–¶–∏–∫–ª—ã",
    description: "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è —Ü–∏–∫–ª—ã for –∏ while.",
    tutorial: `üìñ –¶–∏–∫–ª—ã –≤ JavaScript

–¶–∏–∫–ª—ã –ø–æ–≤—Ç–æ—Ä—è—é—Ç –∫–æ–¥ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–∞–∑.

–¶–∏–∫–ª For:
for (let i = 0; i < 5; i++) {
  console.log(i); // 0, 1, 2, 3, 4
}

–¶–∏–∫–ª While:
let count = 0;
while (count < 3) {
  console.log(count);
  count++;
}

–¶–∏–∫–ª For...of (–¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤):
const fruits = ["—è–±–ª–æ–∫–æ", "–±–∞–Ω–∞–Ω"];
for (const fruit of fruits) {
  console.log(fruit);
}

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ü–∏–∫–ª–∞:
‚Ä¢ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: let i = 0
‚Ä¢ –£—Å–ª–æ–≤–∏–µ: i < 5
‚Ä¢ –ü—Ä–∏—Ä–∞—â–µ–Ω–∏–µ: i++`,
    taskTitle: "* –°—á—ë—Ç—á–∏–∫ —á–∏—Å–µ–ª *",
    taskDescription: "–ò—Å–ø—Ä–∞–≤—å—Ç–µ —Ü–∏–∫–ª –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –æ—Ç 1 –¥–æ 5 –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—É–º–º—ã.",
    expectedOutput: "–ß–∏—Å–ª–∞: 1 2 3 4 5 –°—É–º–º–∞: 15",
    initialCode: `let numbers = "";
let sum = 0;

// –ò—Å–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Ü–∏–∫–ª –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –æ—Ç 1 –¥–æ 5
for (let i = 1; i  5; i++) {
  numbers += i + " ";
  sum += ;
}

console.log("–ß–∏—Å–ª–∞: " + numbers + "–°—É–º–º–∞: " + sum);`,
    solution: `let numbers = "";
let sum = 0;

for (let i = 1; i <= 5; i++) {
  numbers += i + " ";
  sum += i;
}

console.log("–ß–∏—Å–ª–∞: " + numbers + "–°—É–º–º–∞: " + sum);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <= (–º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ) —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å —á–∏—Å–ª–æ 5",
      "üí° –î–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 'i' –∫ —Å—É–º–º–µ",
      "üí° –£—Å–ª–æ–≤–∏–µ —Ü–∏–∫–ª–∞ –¥–æ–ª–∂–Ω–æ –ø–æ–∑–≤–æ–ª–∏—Ç—å i –¥–æ—Å—Ç–∏—á—å 5",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∫–ª—é—á–∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Ü–∏–∫–ª–∞ –≤ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—É–º–º—ã"
    ]
  },
  {
    id: 6,
    name: "–†–∞–±–æ—Ç–∞ —Å DOM",
    description: "–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∏—Å–ø–æ–ª—å–∑—É—è –æ–±—ä–µ–∫—Ç–Ω—É—é –º–æ–¥–µ–ª—å –¥–æ–∫—É–º–µ–Ω—Ç–∞.",
    tutorial: `üìñ –†–∞–±–æ—Ç–∞ —Å DOM –≤ JavaScript

DOM –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å HTML —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏.

–í—ã–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
document.getElementById("myId")
document.querySelector(".myClass")
document.querySelectorAll("p")

–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:
element.textContent = "–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç";
element.innerHTML = "<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>";

–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π:
element.style.color = "red";
element.style.backgroundColor = "blue";

–°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
const newDiv = document.createElement("div");
newDiv.textContent = "–ü—Ä–∏–≤–µ—Ç!";
document.body.appendChild(newDiv);

–°–æ–±—ã—Ç–∏—è:
element.addEventListener("click", function() {
  console.log("–ù–∞–∂–∞—Ç–æ!");
});`,
    taskTitle: "* –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ *",
    taskDescription: "–ó–∞–≤–µ—Ä—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.",
    expectedOutput: "–¢–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: –ü—Ä–∏–≤–µ—Ç, JavaScript!",
    initialCode: `// –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–ª–æ –±—ã)
const mockElement = {
  textContent: "–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç",
  style: {}
};

// –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
mockElement. = "–ü—Ä–∏–≤–µ—Ç, JavaScript!";

// –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∏–ª—å
mockElement.style. = "blue";

console.log("–¢–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: " + mockElement.textContent);
console.log("–¶–≤–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: " + mockElement.style.color);`,
    solution: `const mockElement = {
  textContent: "–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç",
  style: {}
};

mockElement.textContent = "–ü—Ä–∏–≤–µ—Ç, JavaScript!";
mockElement.style.color = "blue";

console.log("–¢–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: " + mockElement.textContent);
console.log("–¶–≤–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: " + mockElement.style.color);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ 'textContent' –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–∞",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'style.color' –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞",
      "üí° –ü–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –æ–±—ä–µ–∫—Ç–∞ —Å –ø–æ–º–æ—â—å—é —Ç–æ—á–µ—á–Ω–æ–π –Ω–æ—Ç–∞—Ü–∏–∏",
      "üí° –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è (=)"
    ]
  },
  {
    id: 7,
    name: "–°–æ–±—ã—Ç–∏—è",
    description: "–†–µ–∞–≥–∏—Ä—É–π—Ç–µ –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–∞–∫–∏–µ –∫–∞–∫ –∫–ª–∏–∫–∏, –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º.",
    tutorial: `üìñ –°–æ–±—ã—Ç–∏—è –≤ JavaScript

–°–æ–±—ã—Ç–∏—è –ø–æ–∑–≤–æ–ª—è—é—Ç –∫–æ–¥—É —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π:
element.addEventListener("click", function() {
  console.log("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞!");
});

–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è:
‚Ä¢ click - –∫–ª–∏–∫ –º—ã—à–∏
‚Ä¢ keydown - –Ω–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞
‚Ä¢ submit - –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ñ–æ—Ä–º–∞
‚Ä¢ load - —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
‚Ä¢ change - –∏–∑–º–µ–Ω—ë–Ω –≤–≤–æ–¥

–û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è:
element.addEventListener("click", function(event) {
  console.log("–ö–ª–∏–∫ –≤:", event.clientX, event.clientY);
  event.preventDefault(); // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
});

–°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
element.addEventListener("click", (event) => {
  console.log("–°–æ–±—ã—Ç–∏–µ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏!");
});`,
    taskTitle: "* –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π *",
    taskDescription: "–ó–∞–≤–µ—Ä—à–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏.",
    expectedOutput: "–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞! –°—á—ë—Ç: 1",
    initialCode: `// –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ –∫–Ω–æ–ø–∫–∏
const mockButton = {
  clickHandlers: [],
  addEventListener: function(event, handler) {
    this.clickHandlers.push(handler);
  },
  click: function() {
    this.clickHandlers.forEach(handler => handler());
  }
};

let clickCount = 0;

// –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Å–æ–±—ã—Ç–∏–π –∫–ª–∏–∫–∞
mockButton.addEventListener("", function() {
  clickCount++;
  console.log("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞! –°—á—ë—Ç: " + clickCount);
});

// –ò–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
mockButton.click();`,
    solution: `const mockButton = {
  clickHandlers: [],
  addEventListener: function(event, handler) {
    this.clickHandlers.push(handler);
  },
  click: function() {
    this.clickHandlers.forEach(handler => handler());
  }
};

let clickCount = 0;

mockButton.addEventListener("click", function() {
  clickCount++;
  console.log("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞! –°—á—ë—Ç: " + clickCount);
});

mockButton.click();`,
    hints: [
      "üí° –ü–µ—Ä–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–º–µ–Ω–µ–º —Å–æ–±—ã—Ç–∏—è –≤ –∫–∞–≤—ã—á–∫–∞—Ö",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'click' –∫–∞–∫ –∏–º—è —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–ª–∏–∫–æ–≤ –º—ã—à–∏",
      "üí° –ò–º–µ–Ω–∞ —Å–æ–±—ã—Ç–∏–π ‚Äî —ç—Ç–æ —Å—Ç—Ä–æ–∫–∏, –ø–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω—ã –∫–∞–≤—ã—á–∫–∏",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–º—è —Å–æ–±—ã—Ç–∏—è —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞–µ—Ç"
    ]
  },
  {
    id: 8,
    name: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫",
    description: "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–π—Ç–µ –æ—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ, –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã try-catch.",
    tutorial: `üìñ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ JavaScript

–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–∞–¥–µ–Ω–∏–µ –∫–æ–¥–∞ –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º.

Try-Catch:
try {
  // –ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É
  const result = riskyOperation();
  console.log(result);
} catch (error) {
  // –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É
  console.log("–û—à–∏–±–∫–∞:", error.message);
}

Try-Catch-Finally:
try {
  // –†–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥
} catch (error) {
  // –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É
} finally {
  // –í—Å–µ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
}

–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—à–∏–±–æ–∫:
if (age < 0) {
  throw new Error("–í–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º");
}

–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫:
‚Ä¢ ReferenceError - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
‚Ä¢ TypeError - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ SyntaxError - —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞`,
    taskTitle: "* –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ *",
    taskDescription: "–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫.",
    expectedOutput: "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞: –ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å",
    initialCode: `function divide(a, b) {
  if (b === 0) {
    throw new Error("–ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å");
  }
  return a / b;
}

// –î–æ–±–∞–≤–∏—Ç—å try-catch –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–∫–∏
 {
  const result = divide(10, 0);
  console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç:", result);
}  (error) {
  console.log("–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞:", error.message);
}`,
    solution: `function divide(a, b) {
  if (b === 0) {
    throw new Error("–ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å");
  }
  return a / b;
}

try {
  const result = divide(10, 0);
  console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç:", result);
} catch (error) {
  console.log("–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞:", error.message);
}`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ 'try' –¥–ª—è –Ω–∞—á–∞–ª–∞ –±–ª–æ–∫–∞ try",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ 'catch' –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫",
      "üí° –°—Ç—Ä—É–∫—Ç—É—Ä–∞ try-catch –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –æ–±–æ–∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö",
      "üí° –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –≤ –±–ª–æ–∫ try"
    ]
  },
  {
    id: 9,
    name: "–§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤",
    description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –≤ —ç—Ç–æ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–º –∏—Å–ø—ã—Ç–∞–Ω–∏–∏.",
    tutorial: `üìñ –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤

–≠—Ç–æ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å—ë, —á—Ç–æ –≤—ã –∏–∑—É—á–∏–ª–∏:
‚Ä¢ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –§—É–Ω–∫—Ü–∏–∏
‚Ä¢ –ú–∞—Å—Å–∏–≤—ã –∏ –æ–±—ä–µ–∫—Ç—ã
‚Ä¢ –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã
‚Ä¢ –¶–∏–∫–ª—ã
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å DOM
‚Ä¢ –°–æ–±—ã—Ç–∏—è
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

–í—ã —Å–æ–∑–¥–∞–¥–∏—Ç–µ –ø–æ–ª–Ω—É—é –º–∏–Ω–∏-–ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∫–æ–Ω—Ü–µ–ø—Ü–∏–π JavaScript –≤–º–µ—Å—Ç–µ.

–°–æ–≤–µ—Ç—ã:
‚Ä¢ –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —á–∏—Ç–∞–π—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
‚Ä¢ –†–∞–∑–±–∏–≤–∞–π—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –Ω–∞ –º–µ–Ω—å—à–∏–µ —á–∞—Å—Ç–∏
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ console.log –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∫–æ–¥–∞
‚Ä¢ –ù–µ –±–æ–π—Ç–µ—Å—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å!

–£–¥–∞—á–∏, –æ—Ç–≤–∞–∂–Ω—ã–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç!`,
    taskTitle: "* –ì–ª–∞–≤–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ—Ü–µ–Ω–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.",
    expectedOutput: "–°—Ç—É–¥–µ–Ω—Ç: –ê–ª–∏—Å–∞, –û—Ü–µ–Ω–∫–∞: B, –°—Ç–∞—Ç—É—Å: –°–¥–∞–ª\n–°—Ç—É–¥–µ–Ω—Ç: –ë–æ–±, –û—Ü–µ–Ω–∫–∞: D, –°—Ç–∞—Ç—É—Å: –ù–µ —Å–¥–∞–ª\n–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –∫–ª–∞—Å—Å–∞: 72.5",
    initialCode: `// –ó–∞–≤–µ—Ä—à–∏—Ç–µ —ç—Ç–æ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ—Ü–µ–Ω–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
const students = [
  { name: "–ê–ª–∏—Å–∞", scores: [85, 92, 78, 96] },
  { name: "–ë–æ–±", scores: [45, 67, 58, 72] }
];

function calculateAverage(scores) {
  // –í—ã—á–∏—Å–ª–∏—Ç–µ –∏ –≤–µ—Ä–Ω–∏—Ç–µ —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –æ—Ü–µ–Ω–æ–∫
  
}

function getLetterGrade(average) {
  // –í–µ—Ä–Ω–∏—Ç–µ –±—É–∫–≤–µ–Ω–Ω—É—é –æ—Ü–µ–Ω–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞
  // A: 90+, B: 80-89, C: 70-79, D: 60-69, F: –Ω–∏–∂–µ 60
  
}

function getPassStatus(average) {
  // –í–µ—Ä–Ω–∏—Ç–µ "–°–¥–∞–ª" –µ—Å–ª–∏ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª >= 70, "–ù–µ —Å–¥–∞–ª" –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
  
}

// –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
let classTotal = 0;
for (const student of students) {
  const average = calculateAverage(student.scores);
  const grade = getLetterGrade(average);
  const status = getPassStatus(average);
  
  console.log(\`–°—Ç—É–¥–µ–Ω—Ç: \${student.name}, –û—Ü–µ–Ω–∫–∞: \${grade}, –°—Ç–∞—Ç—É—Å: \${status}\`);
  classTotal += average;
}

// –í—ã—á–∏—Å–ª–∏—Ç—å –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –∫–ª–∞—Å—Å–∞
const classAverage = classTotal / students.length;
console.log("–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –∫–ª–∞—Å—Å–∞: " + classAverage);`,
    solution: `const students = [
  { name: "–ê–ª–∏—Å–∞", scores: [85, 92, 78, 96] },
  { name: "–ë–æ–±", scores: [45, 67, 58, 72] }
];

function calculateAverage(scores) {
  let total = 0;
  for (const score of scores) {
    total += score;
  }
  return total / scores.length;
}

function getLetterGrade(average) {
  if (average >= 90) return "A";
  if (average >= 80) return "B";
  if (average >= 70) return "C";
  if (average >= 60) return "D";
  return "F";
}

function getPassStatus(average) {
  return average >= 70 ? "–°–¥–∞–ª" : "–ù–µ —Å–¥–∞–ª";
}

let classTotal = 0;
for (const student of students) {
  const average = calculateAverage(student.scores);
  const grade = getLetterGrade(average);
  const status = getPassStatus(average);
  
  console.log(\`–°—Ç—É–¥–µ–Ω—Ç: \${student.name}, –û—Ü–µ–Ω–∫–∞: \${grade}, –°—Ç–∞—Ç—É—Å: \${status}\`);
  classTotal += average;
}

const classAverage = classTotal / students.length;
console.log("–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –∫–ª–∞—Å—Å–∞: " + classAverage);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –æ—Ü–µ–Ω–æ–∫ –≤ –º–∞—Å—Å–∏–≤–µ, –∑–∞—Ç–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ –Ω–∞ –¥–ª–∏–Ω—É –º–∞—Å—Å–∏–≤–∞",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã if-else –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±—É–∫–≤–µ–Ω–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏–ª–∏ if-else –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ —Å–¥–∞–ª/–Ω–µ —Å–¥–∞–ª",
      "üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω–Ω—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã —Å ${} –¥–ª—è –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏ —Å—Ç—Ä–æ–∫",
      "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã—á–∏—Å–ª–∏–ª–∏ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –∫–ª–∞—Å—Å–∞ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤"
    ]
  },
  // –£—Ä–æ–≤–Ω–∏ 10-19: –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å
  {
    id: 10,
    name: "–î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è",
    description: "–ò–∑—É—á–∏—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤ –∏ –æ–±—ä–µ–∫—Ç–æ–≤.",
    tutorial: `üìñ –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –≤ JavaScript

–î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–≤–ª–µ–∫–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤ –∏ –æ–±—ä–µ–∫—Ç–æ–≤.

–î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–æ–≤:
const [first, second] = [1, 2, 3];
console.log(first); // 1
console.log(second); // 2

–î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤:
const {name, age} = {name: "–ê–Ω–Ω–∞", age: 30};
console.log(name); // "–ê–Ω–Ω–∞"

–ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:
const [a = 5, b = 10] = [1];
console.log(a); // 1
console.log(b); // 10

–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏:
const {name: userName} = {name: "–ò–≤–∞–Ω"};
console.log(userName); // "–ò–≤–∞–Ω"`,
    taskTitle: "* –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö *",
    taskDescription: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∏ –æ–±—ä–µ–∫—Ç–∞.",
    expectedOutput: "–ü–µ—Ä–≤—ã–π: 10, –í—Ç–æ—Ä–æ–π: 20, –ò–º—è: –ï–ª–µ–Ω–∞, –í–æ–∑—Ä–∞—Å—Ç: 28",
    initialCode: `const numbers = [10, 20, 30];
const person = {name: "–ï–ª–µ–Ω–∞", age: 28, city: "–ú–æ—Å–∫–≤–∞"};

// –ò–∑–≤–ª–µ–∫–∏—Ç–µ –ø–µ—Ä–≤—ã–µ –¥–≤–∞ —á–∏—Å–ª–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞
const [] = numbers;

// –ò–∑–≤–ª–µ–∫–∏—Ç–µ –∏–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç –∏–∑ –æ–±—ä–µ–∫—Ç–∞ person
const {} = person;

console.log("–ü–µ—Ä–≤—ã–π: " + first + ", –í—Ç–æ—Ä–æ–π: " + second + ", –ò–º—è: " + name + ", –í–æ–∑—Ä–∞—Å—Ç: " + age);`,
    solution: `const numbers = [10, 20, 30];
const person = {name: "–ï–ª–µ–Ω–∞", age: 28, city: "–ú–æ—Å–∫–≤–∞"};

const [first, second] = numbers;
const {name, age} = person;

console.log("–ü–µ—Ä–≤—ã–π: " + first + ", –í—Ç–æ—Ä–æ–π: " + second + ", –ò–º—è: " + name + ", –í–æ–∑—Ä–∞—Å—Ç: " + age);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏ [] –¥–ª—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –º–∞—Å—Å–∏–≤–æ–≤",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ {} –¥–ª—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤",
      "üí° –ò–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∏–º–µ–Ω–∞–º–∏ —Å–≤–æ–π—Å—Ç–≤",
      "üí° –ü–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω –ø—Ä–∏ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –º–∞—Å—Å–∏–≤–æ–≤"
    ]
  },
  {
    id: 11,
    name: "–®–∞–±–ª–æ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏",
    description: "–û—Å–≤–æ–π—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–æ–∫ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏.",
    tutorial: `üìñ –®–∞–±–ª–æ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ JavaScript

–®–∞–±–ª–æ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–±—Ä–∞—Ç–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –≤—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –≤—ã—Ä–∞–∂–µ–Ω–∏—è.

–ë–∞–∑–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å:
const name = "–ú–∏—Ä";
const greeting = \`–ü—Ä–∏–≤–µ—Ç, \${name}!\`;

–ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏:
const text = \`–≠—Ç–æ
–º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è
—Å—Ç—Ä–æ–∫–∞\`;

–í—ã—Ä–∞–∂–µ–Ω–∏—è –≤ —à–∞–±–ª–æ–Ω–∞—Ö:
const a = 5;
const b = 3;
const result = \`\${a} + \${b} = \${a + b}\`;

–í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π:
const upper = (str) => str.toUpperCase();
const message = \`–ü—Ä–∏–≤–µ—Ç, \${upper("–∞–Ω–Ω–∞")}!\`;`,
    taskTitle: "* –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π *",
    taskDescription: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —à–∞–±–ª–æ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.",
    expectedOutput: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –î–º–∏—Ç—Ä–∏–π (ID: 42) –∏–º–µ–µ—Ç 150 –æ—á–∫–æ–≤. –°—Ç–∞—Ç—É—Å: –ê–ö–¢–ò–í–ï–ù",
    initialCode: `const user = {
  name: "–î–º–∏—Ç—Ä–∏–π",
  id: 42,
  points: 150,
  status: "–∞–∫—Ç–∏–≤–µ–Ω"
};

// –°–æ–∑–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É—è —à–∞–±–ª–æ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
const message = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + user.name + " (ID: " + user.id + ") –∏–º–µ–µ—Ç " + user.points + " –æ—á–∫–æ–≤. –°—Ç–∞—Ç—É—Å: " + user.status.toUpperCase();

console.log(message);`,
    solution: `const user = {
  name: "–î–º–∏—Ç—Ä–∏–π",
  id: 42,
  points: 150,
  status: "–∞–∫—Ç–∏–≤–µ–Ω"
};

const message = \`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å \${user.name} (ID: \${user.id}) –∏–º–µ–µ—Ç \${user.points} –æ—á–∫–æ–≤. –°—Ç–∞—Ç—É—Å: \${user.status.toUpperCase()}\`;

console.log(message);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—Ä–∞—Ç–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ ` –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫",
      "üí° –í—Å—Ç–∞–≤–ª—è–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é ${–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è}",
      "üí° –í–Ω—É—Ç—Ä–∏ ${} –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è JavaScript",
      "üí° –ú–µ—Ç–æ–¥—ã –æ–±—ä–µ–∫—Ç–æ–≤ —Ç–æ–∂–µ –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –≤–Ω—É—Ç—Ä–∏ ${}"
    ]
  },
  {
    id: 12,
    name: "–ú–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–æ–≤",
    description: "–ò–∑—É—á–∏—Ç–µ –º–æ—â–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Å—Å–∏–≤–∞–º–∏: map, filter, reduce.",
    tutorial: `üìñ –ú–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–æ–≤ –≤ JavaScript

–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–æ–≤ –¥–µ–ª–∞—é—Ç –∫–æ–¥ –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–º –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º.

map() - –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç:
const numbers = [1, 2, 3];
const doubled = numbers.map(x => x * 2); // [2, 4, 6]

filter() - —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã:
const ages = [12, 18, 25, 30];
const adults = ages.filter(age => age >= 18); // [18, 25, 30]

reduce() - —Å–≤–æ–¥–∏—Ç –º–∞—Å—Å–∏–≤ –∫ –æ–¥–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é:
const sum = [1, 2, 3].reduce((acc, curr) => acc + curr, 0); // 6

find() - –Ω–∞—Ö–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç:
const users = [{id: 1, name: "–ê–Ω–Ω–∞"}, {id: 2, name: "–ò–≤–∞–Ω"}];
const user = users.find(u => u.id === 2); // {id: 2, name: "–ò–≤–∞–Ω"}`,
    taskTitle: "* –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ *",
    taskDescription: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤.",
    expectedOutput: "–î–æ—Ä–æ–≥–∏–µ —Ç–æ–≤–∞—Ä—ã: –ù–æ—É—Ç–±—É–∫, –¢–µ–ª–µ—Ñ–æ–Ω. –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: 180000",
    initialCode: `const products = [
  {name: "–ö–Ω–∏–≥–∞", price: 500},
  {name: "–ù–æ—É—Ç–±—É–∫", price: 120000},
  {name: "–¢–µ–ª–µ—Ñ–æ–Ω", price: 60000},
  {name: "–†—É—á–∫–∞", price: 50}
];

// –ù–∞–π–¥–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –¥–æ—Ä–æ–∂–µ 1000 —Ä—É–±–ª–µ–π
const expensiveProducts = [];

// –ü–æ–ª—É—á–∏—Ç–µ –º–∞—Å—Å–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–π –¥–æ—Ä–æ–≥–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
const expensiveNames = [];

// –í—ã—á–∏—Å–ª–∏—Ç–µ –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Ä–æ–≥–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
const totalCost = 0;

console.log("–î–æ—Ä–æ–≥–∏–µ —Ç–æ–≤–∞—Ä—ã: " + expensiveNames.join(", ") + ". –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: " + totalCost);`,
    solution: `const products = [
  {name: "–ö–Ω–∏–≥–∞", price: 500},
  {name: "–ù–æ—É—Ç–±—É–∫", price: 120000},
  {name: "–¢–µ–ª–µ—Ñ–æ–Ω", price: 60000},
  {name: "–†—É—á–∫–∞", price: 50}
];

const expensiveProducts = products.filter(product => product.price > 1000);
const expensiveNames = expensiveProducts.map(product => product.name);
const totalCost = expensiveProducts.reduce((sum, product) => sum + product.price, 0);

console.log("–î–æ—Ä–æ–≥–∏–µ —Ç–æ–≤–∞—Ä—ã: " + expensiveNames.join(", ") + ". –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: " + totalCost);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ filter() –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –¥–æ—Ä–æ–∂–µ 1000",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ map() –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ reduce() –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–µ–Ω",
      "üí° –ú–µ—Ç–æ–¥—ã –º–æ–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω—è—Ç—å –≤ —Ü–µ–ø–æ—á–∫–∏: array.filter().map()"
    ]
  },
  {
    id: 13,
    name: "–ü—Ä–æ–º–∏—Å—ã",
    description: "–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø—Ä–æ–º–∏—Å–∞–º–∏.",
    tutorial: `üìñ –ü—Ä–æ–º–∏—Å—ã –≤ JavaScript

–ü—Ä–æ–º–∏—Å—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –∫–æ–¥–æ–º –±–æ–ª–µ–µ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ.

–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:
const promise = new Promise((resolve, reject) => {
  if (—É—Å–ø–µ—Ö) {
    resolve("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã");
  } else {
    reject("–û—à–∏–±–∫–∞");
  }
});

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–∏—Å–æ–≤:
promise
  .then(result => console.log(result))
  .catch(error => console.log(error));

–ü—Ä–æ–º–∏—Å —Å —Ç–∞–π–º–µ—Ä–æ–º:
const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));

delay(1000).then(() => console.log("–ü—Ä–æ—à–ª–∞ —Å–µ–∫—É–Ω–¥–∞"));

–°–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–æ–º–∏—Å–∞:
‚Ä¢ pending (–æ–∂–∏–¥–∞–Ω–∏–µ)
‚Ä¢ fulfilled (–≤—ã–ø–æ–ª–Ω–µ–Ω)
‚Ä¢ rejected (–æ—Ç–∫–ª–æ–Ω—ë–Ω)`,
    taskTitle: "* –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–∏—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
    expectedOutput: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω: {\"id\":1,\"name\":\"–ê–ª–µ–∫—Å–µ–π\"}",
    initialCode: `// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é loadUser, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–∏—Å
function loadUser(id) {
  // –í–µ—Ä–Ω–∏—Ç–µ –ø—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É resolve'–∏—Ç—Å—è —Å –æ–±—ä–µ–∫—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  
}

// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–º–∏—Å
loadUser(1)
  .then(user => {
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω: " + JSON.stringify(user));
  })
  .catch(error => {
    console.log("–û—à–∏–±–∫–∞: " + error);
  });`,
    solution: `function loadUser(id) {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      if (id > 0) {
        resolve({id: id, name: "–ê–ª–µ–∫—Å–µ–π"});
      } else {
        reject("–ù–µ–≤–µ—Ä–Ω—ã–π ID");
      }
    }, 1000);
  });
}

loadUser(1)
  .then(user => {
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω: " + JSON.stringify(user));
  })
  .catch(error => {
    console.log("–û—à–∏–±–∫–∞: " + error);
  });`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä new Promise((resolve, reject) => {})",
      "üí° –í—ã–∑–æ–≤–∏—Ç–µ resolve() –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ setTimeout –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–¥–µ—Ä–∂–∫–∏",
      "üí° –ü—Ä–æ–º–∏—Å –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    ]
  },
  {
    id: 14,
    name: "Async/Await",
    description: "–û—Å–≤–æ–π—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –∫–æ–¥–æ–º.",
    tutorial: `üìñ Async/Await –≤ JavaScript

Async/await –¥–µ–ª–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥ –ø–æ—Ö–æ–∂–∏–º –Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π.

–û–±—ä—è–≤–ª–µ–Ω–∏–µ async —Ñ—É–Ω–∫—Ü–∏–∏:
async function fetchData() {
  // async —Ñ—É–Ω–∫—Ü–∏—è –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–∏—Å
}

–û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
async function example() {
  try {
    const result = await somePromise;
    console.log(result);
  } catch (error) {
    console.log("–û—à–∏–±–∫–∞:", error);
  }
}

–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ:
async function loadAll() {
  const [user, posts] = await Promise.all([
    loadUser(),
    loadPosts()
  ]);
}

Async —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
const fetchUser = async (id) => {
  const response = await fetch(\`/users/\${id}\`);
  return response.json();
};`,
    taskTitle: "* –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ *",
    taskDescription: "–ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –∫–æ–¥ —Å –ø—Ä–æ–º–∏—Å–∞–º–∏ –≤ async/await —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.",
    expectedOutput: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ú–∞—Ä–∏—è, –ü–æ—Å—Ç—ã: 5",
    initialCode: `// –§—É–Ω–∫—Ü–∏–∏-–∑–∞–≥–ª—É—à–∫–∏ (—É–∂–µ –≥–æ—Ç–æ–≤—ã–µ)
function fetchUser(id) {
  return new Promise(resolve => {
    setTimeout(() => resolve({name: "–ú–∞—Ä–∏—è", id: id}), 500);
  });
}

function fetchUserPosts(userId) {
  return new Promise(resolve => {
    setTimeout(() => resolve([1, 2, 3, 4, 5]), 300);
  });
}

// –ü–µ—Ä–µ–ø–∏—à–∏—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –∏—Å–ø–æ–ª—å–∑—É—è async/await
function loadUserData(userId) {
  return fetchUser(userId)
    .then(user => {
      return fetchUserPosts(user.id)
        .then(posts => {
          console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + user.name + ", –ü–æ—Å—Ç—ã: " + posts.length);
        });
    });
}

loadUserData(1);`,
    solution: `function fetchUser(id) {
  return new Promise(resolve => {
    setTimeout(() => resolve({name: "–ú–∞—Ä–∏—è", id: id}), 500);
  });
}

function fetchUserPosts(userId) {
  return new Promise(resolve => {
    setTimeout(() => resolve([1, 2, 3, 4, 5]), 300);
  });
}

async function loadUserData(userId) {
  try {
    const user = await fetchUser(userId);
    const posts = await fetchUserPosts(user.id);
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + user.name + ", –ü–æ—Å—Ç—ã: " + posts.length);
  } catch (error) {
    console.log("–û—à–∏–±–∫–∞:", error);
  }
}

loadUserData(1);`,
    hints: [
      "üí° –î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ async –ø–µ—Ä–µ–¥ function",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ await –ø–µ—Ä–µ–¥ –ø—Ä–æ–º–∏—Å–∞–º–∏ –≤–º–µ—Å—Ç–æ .then()",
      "üí° –û–±–µ—Ä–Ω–∏—Ç–µ –∫–æ–¥ –≤ try/catch –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫",
      "üí° –£–±–µ—Ä–∏—Ç–µ —Ü–µ–ø–æ—á–∫–∏ .then() –∏ —Å–¥–µ–ª–∞–π—Ç–µ –∫–æ–¥ –ª–∏–Ω–µ–π–Ω—ã–º"
    ]
  },
  {
    id: 15,
    name: "–ö–ª–∞—Å—Å—ã ES6",
    description: "–ò–∑—É—á–∏—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–ª–∞—Å—Å–æ–≤ –≤ JavaScript.",
    tutorial: `üìñ –ö–ª–∞—Å—Å—ã –≤ JavaScript ES6

–ö–ª–∞—Å—Å—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –±–æ–ª–µ–µ —á–∏—Å—Ç—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.

–û–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞:
class Person {
  constructor(name, age) {
    this.name = name;
    this.age = age;
  }
  
  greet() {
    return \`–ü—Ä–∏–≤–µ—Ç, —è \${this.name}\`;
  }
}

–°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:
const person = new Person("–ê–Ω–Ω–∞", 25);

–ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ:
class Student extends Person {
  constructor(name, age, grade) {
    super(name, age); // –≤—ã–∑–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª—è
    this.grade = grade;
  }
  
  study() {
    return \`\${this.name} —É—á–∏—Ç—Å—è\`;
  }
}

–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã:
class MathUtils {
  static add(a, b) {
    return a + b;
  }
}`,
    taskTitle: "* –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Car —Å –º–µ—Ç–æ–¥–∞–º–∏ –∏ –∫–ª–∞—Å—Å ElectricCar, –Ω–∞—Å–ª–µ–¥—É—é—â–∏–π –æ—Ç Car.",
    expectedOutput: "–ú–∞—à–∏–Ω–∞: Tesla Model 3, –ë–∞—Ç–∞—Ä–µ—è: 85%, –ü–æ–µ–∑–¥–∫–∞ –Ω–∞ 50 –∫–º, –ë–∞—Ç–∞—Ä–µ—è: 75%",
    initialCode: `// –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Car
class Car {
  constructor(brand, model) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–≤–æ–π—Å—Ç–≤–∞ brand –∏ model
  }
  
  getInfo() {
    // –í–µ—Ä–Ω–∏—Ç–µ —Å—Ç—Ä–æ–∫—É "–ú–∞—à–∏–Ω–∞: [brand] [model]"
  }
}

// –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å ElectricCar, –Ω–∞—Å–ª–µ–¥—É—é—â–∏–π –æ—Ç Car
class ElectricCar extends Car {
  constructor(brand, model, batteryLevel) {
    // –í—ã–∑–æ–≤–∏—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ä–æ–¥–∏—Ç–µ–ª—è –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ batteryLevel
    
  }
  
  getBatteryInfo() {
    // –í–µ—Ä–Ω–∏—Ç–µ —Å—Ç—Ä–æ–∫—É "–ë–∞—Ç–∞—Ä–µ—è: [batteryLevel]%"
  }
  
  drive(kilometers) {
    // –£–º–µ–Ω—å—à–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –±–∞—Ç–∞—Ä–µ–∏ –Ω–∞ kilometers / 5 (–æ–∫—Ä—É–≥–ª–∏—Ç—å –≤–Ω–∏–∑)
    
  }
}

const tesla = new ElectricCar("Tesla", "Model 3", 85);
console.log(tesla.getInfo() + ", " + tesla.getBatteryInfo());
tesla.drive(50);
console.log("–ü–æ–µ–∑–¥–∫–∞ –Ω–∞ 50 –∫–º, " + tesla.getBatteryInfo());`,
    solution: `class Car {
  constructor(brand, model) {
    this.brand = brand;
    this.model = model;
  }
  
  getInfo() {
    return \`–ú–∞—à–∏–Ω–∞: \${this.brand} \${this.model}\`;
  }
}

class ElectricCar extends Car {
  constructor(brand, model, batteryLevel) {
    super(brand, model);
    this.batteryLevel = batteryLevel;
  }
  
  getBatteryInfo() {
    return \`–ë–∞—Ç–∞—Ä–µ—è: \${this.batteryLevel}%\`;
  }
  
  drive(kilometers) {
    this.batteryLevel -= Math.floor(kilometers / 5);
  }
}

const tesla = new ElectricCar("Tesla", "Model 3", 85);
console.log(tesla.getInfo() + ", " + tesla.getBatteryInfo());
tesla.drive(50);
console.log("–ü–æ–µ–∑–¥–∫–∞ –Ω–∞ 50 –∫–º, " + tesla.getBatteryInfo());`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ constructor –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–≤–æ–π—Å—Ç–≤",
      "üí° –î–ª—è –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ extends –∏ super()",
      "üí° –ú–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞ –æ–±—ä—è–≤–ª—è—é—Ç—Å—è –±–µ–∑ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ function",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Math.floor() –¥–ª—è –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –≤–Ω–∏–∑"
    ]
  },
  {
    id: 16,
    name: "–ú–æ–¥—É–ª–∏ ES6",
    description: "–ò–∑—É—á–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –º–æ–¥—É–ª–µ–π –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–¥–∞.",
    tutorial: `üìñ –ú–æ–¥—É–ª–∏ ES6 –≤ JavaScript

–ú–æ–¥—É–ª–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Ä–∞–∑–¥–µ–ª–∏—Ç—å –∫–æ–¥ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏.

–≠–∫—Å–ø–æ—Ä—Ç (export):
// utils.js
export const PI = 3.14159;
export function add(a, b) {
  return a + b;
}

// –≠–∫—Å–ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
export default class Calculator {
  // ...
}

–ò–º–ø–æ—Ä—Ç (import):
// main.js
import Calculator, { PI, add } from './utils.js';
import * as Utils from './utils.js';

–ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç:
export { functionA, functionB };

–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ:
import { add as sum } from './utils.js';

–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç:
const module = await import('./module.js');`,
    taskTitle: "* –°–∏—Å—Ç–µ–º–∞ –º–æ–¥—É–ª–µ–π *",
    taskDescription: "–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ –∫–æ–¥ –∏—Å–ø–æ–ª—å–∑—É—è —ç–∫—Å–ø–æ—Ä—Ç –∏ –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π.",
    expectedOutput: "–†–µ–∑—É–ª—å—Ç–∞—Ç: 15, –ü–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞: 78.54",
    initialCode: `// –ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –º–æ–¥—É–ª—å mathUtils
// –°–∏–º—É–ª—è—Ü–∏—è –º–æ–¥—É–ª—è mathUtils
const mathUtils = {
  multiply: (a, b) => a * b,
  PI: 3.14159,
  calculateCircleArea: (radius) => mathUtils.PI * radius * radius
};

// –ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –º–æ–¥—É–ª—å Calculator (—ç–∫—Å–ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
class Calculator {
  add(a, b) {
    return a + b;
  }
}

// –°–∏–º—É–ª–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –±—ã–ª–æ –±—ã import)
// import Calculator from './calculator.js';
// import { multiply, PI, calculateCircleArea } from './mathUtils.js';

// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ" —Ñ—É–Ω–∫—Ü–∏–∏
const calc = new Calculator();
const result = calc.add(10, 5);

const area = mathUtils.calculateCircleArea(5);

console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç: " + result + ", –ü–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞: " + area.toFixed(2));`,
    solution: `// –°–∏–º—É–ª—è—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è mathUtils
const mathUtils = {
  multiply: (a, b) => a * b,
  PI: 3.14159,
  calculateCircleArea: (radius) => mathUtils.PI * radius * radius
};

// –°–∏–º—É–ª—è—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–ª–∞—Å—Å–∞ Calculator
class Calculator {
  add(a, b) {
    return a + b;
  }
}

// –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –±—ã–ª–æ –±—ã:
// export const { multiply, PI, calculateCircleArea } = mathUtils;
// export default Calculator;

// –ò –∏–º–ø–æ—Ä—Ç:
// import Calculator from './calculator.js';
// import { multiply, PI, calculateCircleArea } from './mathUtils.js';

const calc = new Calculator();
const result = calc.add(10, 5);
const area = mathUtils.calculateCircleArea(5);

console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç: " + result + ", –ü–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞: " + area.toFixed(2));`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ export –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–π –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö",
      "üí° export default –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–æ–¥—É–ª—è",
      "üí° import { name } from './module' –¥–ª—è –∏–º–µ–Ω–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞",
      "üí° import DefaultName from './module' –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    ]
  },
  {
    id: 17,
    name: "–†–∞–±–æ—Ç–∞ —Å JSON",
    description: "–ù–∞—É—á–∏—Ç–µ—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ JSON.",
    tutorial: `üìñ JSON –≤ JavaScript

JSON (JavaScript Object Notation) - —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏.

–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ JSON:
const obj = {name: "–ê–Ω–Ω–∞", age: 25};
const jsonString = JSON.stringify(obj);
// '{"name":"–ê–Ω–Ω–∞","age":25}'

–ü–∞—Ä—Å–∏–Ω–≥ JSON:
const jsonStr = '{"name":"–ò–≤–∞–Ω","age":30}';
const obj = JSON.parse(jsonStr);
// {name: "–ò–≤–∞–Ω", age: 30}

–†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏:
const users = [{name: "–ê–Ω–Ω–∞"}, {name: "–ò–≤–∞–Ω"}];
const json = JSON.stringify(users);

–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:
try {
  const obj = JSON.parse(invalidJson);
} catch (error) {
  console.log("–ù–µ–≤–µ—Ä–Ω—ã–π JSON");
}

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã stringify:
JSON.stringify(obj, null, 2); // –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ`,
    taskTitle: "* –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π *",
    taskDescription: "–ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –æ–±—ä–µ–∫—Ç—ã –≤ JSON –∏ –æ–±—Ä–∞—Ç–Ω–æ, –æ–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ—à–∏–±–∫–∏.",
    expectedOutput: "JSON: {\"name\":\"–°–æ—Ñ–∏—è\",\"age\":32,\"city\":\"–ú–æ—Å–∫–≤–∞\"}, –û–±—Ä–∞—Ç–Ω–æ: –°–æ—Ñ–∏—è –∏–∑ –≥–æ—Ä–æ–¥ –ú–æ—Å–∫–≤–∞, –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π JSON",
    initialCode: `const user = {
  name: "–°–æ—Ñ–∏—è",
  age: 32,
  city: "–ú–æ—Å–∫–≤–∞",
  password: "secret123" // —ç—Ç–æ –ø–æ–ª–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ø–∞—Å—Ç—å –≤ JSON
};

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –æ–±—ä–µ–∫—Ç –≤ JSON, –∏—Å–∫–ª—é—á–∏–≤ –ø–æ–ª–µ password
const userJson = JSON.stringify(user);

// –†–∞—Å–ø–∞—Ä—Å–∏—Ç–µ JSON –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ–±—ä–µ–∫—Ç
const parsedUser = JSON.parse(userJson);

// –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –Ω–µ–≤–µ—Ä–Ω—ã–π JSON
const invalidJson = '{"name": "–ê–Ω–Ω–∞", "age":}'; // –Ω–µ–≤–µ—Ä–Ω—ã–π JSON

let errorResult;
try {
  JSON.parse(invalidJson);
  errorResult = "–£—Å–ø–µ—à–Ω–æ";
} catch (error) {
  errorResult = "–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π JSON";
}

console.log("JSON: " + userJson + ", –û–±—Ä–∞—Ç–Ω–æ: " + parsedUser.name + " –∏–∑ –≥–æ—Ä–æ–¥ " + parsedUser.city + ", " + errorResult);`,
    solution: `const user = {
  name: "–°–æ—Ñ–∏—è",
  age: 32,
  city: "–ú–æ—Å–∫–≤–∞",
  password: "secret123"
};

// –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª–µ password –ø—Ä–∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏
const userJson = JSON.stringify(user, ['name', 'age', 'city']);

const parsedUser = JSON.parse(userJson);

const invalidJson = '{"name": "–ê–Ω–Ω–∞", "age":}';

let errorResult;
try {
  JSON.parse(invalidJson);
  errorResult = "–£—Å–ø–µ—à–Ω–æ";
} catch (error) {
  errorResult = "–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π JSON";
}

console.log("JSON: " + userJson + ", –û–±—Ä–∞—Ç–Ω–æ: " + parsedUser.name + " –∏–∑ –≥–æ—Ä–æ–¥ " + parsedUser.city + ", " + errorResult);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JSON.stringify() –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫—É",
      "üí° –í—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä stringify –º–æ–∂–µ—Ç –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º –ø–æ–ª–µ–π –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è",
      "üí° JSON.parse() –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ–±—ä–µ–∫—Ç",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ try/catch –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞"
    ]
  },
  {
    id: 18,
    name: "–ó–∞–º—ã–∫–∞–Ω–∏—è",
    description: "–ò–∑—É—á–∏—Ç–µ –º–æ—â–Ω—É—é –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –∑–∞–º—ã–∫–∞–Ω–∏–π –≤ JavaScript.",
    tutorial: `üìñ –ó–∞–º—ã–∫–∞–Ω–∏—è –≤ JavaScript

–ó–∞–º—ã–∫–∞–Ω–∏–µ - —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –∏–∑ –≤–Ω–µ—à–Ω–µ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏.

–ü—Ä–æ—Å—Ç–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ:
function outer(x) {
  function inner(y) {
    return x + y; // –¥–æ—Å—Ç—É–ø –∫ x –∏–∑ –≤–Ω–µ—à–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏
  }
  return inner;
}

const addFive = outer(5);
console.log(addFive(3)); // 8

–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:
function createCounter() {
  let count = 0;
  return function() {
    return ++count;
  };
}

const counter = createCounter();
console.log(counter()); // 1
console.log(counter()); // 2

–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
function createBankAccount(initialBalance) {
  let balance = initialBalance;
  
  return {
    deposit: (amount) => balance += amount,
    getBalance: () => balance
  };
}`,
    taskTitle: "* –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é-—Ñ–∞–±—Ä–∏–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —à–∞–≥–∞–º–∏.",
    expectedOutput: "–°—á–µ—Ç—á–∏–∫ 1: 2, 4, 6. –°—á–µ—Ç—á–∏–∫ 2: 5, 10, 15",
    initialCode: `// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é createCounter, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç step (—à–∞–≥)
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é-—Å—á–µ—Ç—á–∏–∫
function createCounter(step) {
  // –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é count
  
  // –í–µ—Ä–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç count –Ω–∞ step –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  
}

// –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ —Å—á–µ—Ç—á–∏–∫–∞
const counter1 = createCounter(2);
const counter2 = createCounter(5);

// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—á–µ—Ç—á–∏–∫–∏
const results1 = [counter1(), counter1(), counter1()];
const results2 = [counter2(), counter2(), counter2()];

console.log("–°—á–µ—Ç—á–∏–∫ 1: " + results1.join(", ") + ". –°—á–µ—Ç—á–∏–∫ 2: " + results2.join(", "));`,
    solution: `function createCounter(step) {
  let count = 0;
  
  return function() {
    count += step;
    return count;
  };
}

const counter1 = createCounter(2);
const counter2 = createCounter(5);

const results1 = [counter1(), counter1(), counter1()];
const results2 = [counter2(), counter2(), counter2()];

console.log("–°—á–µ—Ç—á–∏–∫ 1: " + results1.join(", ") + ". –°—á–µ—Ç—á–∏–∫ 2: " + results2.join(", "));`,
    hints: [
      "üí° –û–±—ä—è–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é count –≤–Ω—É—Ç—Ä–∏ createCounter",
      "üí° –í–µ—Ä–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∏–∑–º–µ–Ω—è–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç count",
      "üí° –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è count –±—É–¥–µ—Ç '–∑–∞—Ö–≤–∞—á–µ–Ω–∞' –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π",
      "üí° –ö–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ createCounter —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏"
    ]
  },
  {
    id: 19,
    name: "–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è",
    description: "–ò–∑—É—á–∏—Ç–µ –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–º.",
    tutorial: `üìñ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤ JavaScript

–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è (regex) –ø–æ–∑–≤–æ–ª—è—é—Ç –∏—Å–∫–∞—Ç—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –ø–æ —à–∞–±–ª–æ–Ω–∞–º.

–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è:
const regex1 = /hello/i; // i = –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä
const regex2 = new RegExp("world", "g"); // g = –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫

–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã:
const text = "Hello World";
text.match(/world/i); // ["World"]
text.replace(/hello/i, "Hi"); // "Hi World"
/hello/i.test(text); // true

–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã:
‚Ä¢ . - –ª—é–±–æ–π —Å–∏–º–≤–æ–ª
‚Ä¢ * - 0 –∏–ª–∏ –±–æ–ª–µ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
‚Ä¢ + - 1 –∏–ª–∏ –±–æ–ª–µ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
‚Ä¢ ? - 0 –∏–ª–∏ 1 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ
‚Ä¢ \\d - —Ü–∏—Ñ—Ä–∞
‚Ä¢ \\w - –±—É–∫–≤–∞ –∏–ª–∏ —Ü–∏—Ñ—Ä–∞
‚Ä¢ \\s - –ø—Ä–æ–±–µ–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª

–ì—Ä—É–ø–ø—ã –∏ –∫–ª–∞—Å—Å—ã:
[abc] - –ª—é–±–æ–π –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ a, b, c
[0-9] - –ª—é–±–∞—è —Ü–∏—Ñ—Ä–∞
(abc) - –≥—Ä—É–ø–ø–∞ —Å–∏–º–≤–æ–ª–æ–≤`,
    taskTitle: "* –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö *",
    taskDescription: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ email –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.",
    expectedOutput: "Email test@example.com: true, Email invalid-email: false, –¢–µ–ª–µ—Ñ–æ–Ω +7-123-456-78-90: true",
    initialCode: `// –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ email
// –î–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å @ –∏ —Ç–æ—á–∫—É –ø–æ—Å–ª–µ @
const emailRegex = //;

// –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
// –§–æ—Ä–º–∞—Ç: +7-XXX-XXX-XX-XX
const phoneRegex = //;

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const email1 = "test@example.com";
const email2 = "invalid-email";
const phone1 = "+7-123-456-78-90";

// –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ
const emailTest1 = emailRegex.test(email1);
const emailTest2 = emailRegex.test(email2);
const phoneTest1 = phoneRegex.test(phone1);

console.log("Email " + email1 + ": " + emailTest1 + ", Email " + email2 + ": " + emailTest2 + ", –¢–µ–ª–µ—Ñ–æ–Ω " + phone1 + ": " + phoneTest1);`,
    solution: `const emailRegex = /^[^@]+@[^@]+\\.[^@]+$/;
const phoneRegex = /^\\+7-\\d{3}-\\d{3}-\\d{2}-\\d{2}$/;

const email1 = "test@example.com";
const email2 = "invalid-email";
const phone1 = "+7-123-456-78-90";

const emailTest1 = emailRegex.test(email1);
const emailTest2 = emailRegex.test(email2);
const phoneTest1 = phoneRegex.test(phone1);

console.log("Email " + email1 + ": " + emailTest1 + ", Email " + email2 + ": " + emailTest2 + ", –¢–µ–ª–µ—Ñ–æ–Ω " + phone1 + ": " + phoneTest1);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /pattern/ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è",
      "üí° ^ –æ–∑–Ω–∞—á–∞–µ—Ç –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏, $ –æ–∑–Ω–∞—á–∞–µ—Ç –∫–æ–Ω–µ—Ü",
      "üí° \\d –æ–∑–Ω–∞—á–∞–µ—Ç —Ü–∏—Ñ—Ä—É, {3} –æ–∑–Ω–∞—á–∞–µ—Ç —Ä–æ–≤–Ω–æ 3 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ .test() –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è"
    ]
  },
  // –£—Ä–æ–≤–Ω–∏ 20-29: –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å
  {
    id: 20,
    name: "Map –∏ Set",
    description: "–ò–∑—É—á–∏—Ç–µ –Ω–æ–≤—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö ES6.",
    tutorial: `üìñ Map –∏ Set –≤ JavaScript

Map –∏ Set - —ç—Ç–æ –Ω–æ–≤—ã–µ —Ç–∏–ø—ã –∫–æ–ª–ª–µ–∫—Ü–∏–π –≤ ES6.

Map - –∫–æ–ª–ª–µ–∫—Ü–∏—è –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ:
const map = new Map();
map.set('name', '–ê–Ω–Ω–∞');
map.set(1, '—á–∏—Å–ª–æ');
map.get('name'); // '–ê–Ω–Ω–∞'
map.has('name'); // true
map.delete('name');
map.size; // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

–ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ Map:
for (const [key, value] of map) {
  console.log(key, value);
}

Set - –∫–æ–ª–ª–µ–∫—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π:
const set = new Set();
set.add(1);
set.add(2);
set.add(1); // –¥—É–±–ª–∏–∫–∞—Ç, –Ω–µ –¥–æ–±–∞–≤–∏—Ç—Å—è
set.has(1); // true
set.size; // 2

–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –≤ Set:
const uniqueNumbers = new Set([1, 1, 2, 3, 3]); // Set {1, 2, 3}`,
    taskTitle: "* –°–∏—Å—Ç–µ–º–∞ —Ç–µ–≥–æ–≤ *",
    taskDescription: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Map –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ç–µ–≥–æ–≤ –∏ Set –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.",
    expectedOutput: "–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏: javascript, react, nodejs. –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–≥–∏: javascript: 3, react: 2",
    initialCode: `const articles = [
  {title: "–ò–∑—É—á–∞–µ–º JS", tags: ["javascript", "–æ—Å–Ω–æ–≤—ã"]},
  {title: "React hooks", tags: ["react", "javascript"]},
  {title: "Node.js —Å–µ—Ä–≤–µ—Ä", tags: ["nodejs", "javascript"]},
  {title: "React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã", tags: ["react", "components"]}
];

// –°–æ–∑–¥–∞–π—Ç–µ Set –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤
const uniqueTags = new Set();

// –°–æ–∑–¥–∞–π—Ç–µ Map –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–∂–¥–æ–≥–æ —Ç–µ–≥–∞
const tagCounts = new Map();

// –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –≤—Å–µ —Ç–µ–≥–∏ –∏–∑ –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π
for (const article of articles) {
  for (const tag of article.tags) {
    // –î–æ–±–∞–≤—å—Ç–µ —Ç–µ–≥ –≤ Set
    
    // –£–≤–µ–ª–∏—á—å—Ç–µ —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–≥–∞ –≤ Map
    
  }
}

// –ù–∞–π–¥–∏—Ç–µ —Ç–µ–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –±–æ–ª—å—à–µ 1 —Ä–∞–∑–∞
const popularTags = [];
for (const [tag, count] of tagCounts) {
  if (count > 1) {
    popularTags.push(tag + ": " + count);
  }
}

console.log("–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏: " + Array.from(uniqueTags).join(", ") + ". –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–≥–∏: " + popularTags.join(", "));`,
    solution: `const articles = [
  {title: "–ò–∑—É—á–∞–µ–º JS", tags: ["javascript", "–æ—Å–Ω–æ–≤—ã"]},
  {title: "React hooks", tags: ["react", "javascript"]},
  {title: "Node.js —Å–µ—Ä–≤–µ—Ä", tags: ["nodejs", "javascript"]},
  {title: "React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã", tags: ["react", "components"]}
];

const uniqueTags = new Set();
const tagCounts = new Map();

for (const article of articles) {
  for (const tag of article.tags) {
    uniqueTags.add(tag);
    tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);
  }
}

const popularTags = [];
for (const [tag, count] of tagCounts) {
  if (count > 1) {
    popularTags.push(tag + ": " + count);
  }
}

console.log("–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏: " + Array.from(uniqueTags).join(", ") + ". –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–≥–∏: " + popularTags.join(", "));`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ set.add() –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ Set",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ map.set() –∏ map.get() –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Map",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ || 0 –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é",
      "üí° Array.from() –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç Set –≤ –º–∞—Å—Å–∏–≤"
    ]
  },
  {
    id: 21,
    name: "Fetch API",
    description: "–ò–∑—É—á–∏—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤.",
    tutorial: `üìñ Fetch API –≤ JavaScript

Fetch API - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤.

–ë–∞–∑–æ–≤—ã–π GET –∑–∞–ø—Ä–æ—Å:
fetch('/api/users')
  .then(response => response.json())
  .then(data => console.log(data));

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å async/await:
async function fetchUsers() {
  try {
    const response = await fetch('/api/users');
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }
}

POST –∑–∞–ø—Ä–æ—Å:
fetch('/api/users', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify({name: '–ê–Ω–Ω–∞'})
});

–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞:
if (!response.ok) {
  throw new Error('–û—à–∏–±–∫–∞ HTTP: ' + response.status);
}`,
    taskTitle: "* –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *",
    taskDescription: "–°–∏–º—É–ª–∏—Ä—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫.",
    expectedOutput: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω: –ê–Ω–¥—Ä–µ–π",
    initialCode: `// –°–∏–º—É–ª—è—Ü–∏—è fetch API
function mockFetch(url) {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      if (url.includes('/users/1')) {
        resolve({
          ok: true,
          status: 200,
          json: () => Promise.resolve({id: 1, name: '–ê–Ω–¥—Ä–µ–π'})
        });
      } else {
        resolve({
          ok: false,
          status: 404,
          json: () => Promise.resolve({error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'})
        });
      }
    }, 500);
  });
}

// –°–æ–∑–¥–∞–π—Ç–µ async —Ñ—É–Ω–∫—Ü–∏—é loadUser
async function loadUser(userId) {
  try {
    // –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å —Å –ø–æ–º–æ—â—å—é mockFetch
    const response = await mockFetch(\`/users/\${userId}\`);
    
    // –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —É—Å–ø–µ—à–µ–Ω –ª–∏ –æ—Ç–≤–µ—Ç
    if (!response.ok) {
      throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // –ü–æ–ª—É—á–∏—Ç–µ JSON –¥–∞–Ω–Ω—ã–µ
    const user = await response.json();
    
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω: " + user.name);
    return user;
  } catch (error) {
    console.log("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: " + error.message);
  }
}

// –í—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é
loadUser(1);`,
    solution: `function mockFetch(url) {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      if (url.includes('/users/1')) {
        resolve({
          ok: true,
          status: 200,
          json: () => Promise.resolve({id: 1, name: '–ê–Ω–¥—Ä–µ–π'})
        });
      } else {
        resolve({
          ok: false,
          status: 404,
          json: () => Promise.resolve({error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'})
        });
      }
    }, 500);
  });
}

async function loadUser(userId) {
  try {
    const response = await mockFetch(\`/users/\${userId}\`);
    
    if (!response.ok) {
      throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    const user = await response.json();
    
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω: " + user.name);
    return user;
  } catch (error) {
    console.log("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: " + error.message);
  }
}

loadUser(1);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ await –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ fetch",
      "üí° –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ response.ok –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –¥–∞–Ω–Ω—ã—Ö",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ response.json() –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è JSON –¥–∞–Ω–Ω—ã—Ö",
      "üí° –û–±–µ—Ä–Ω–∏—Ç–µ –∫–æ–¥ –≤ try/catch –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"
    ]
  },
  {
    id: 22,
    name: "LocalStorage",
    description: "–ò–∑—É—á–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
    tutorial: `üìñ LocalStorage –≤ JavaScript

LocalStorage –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:
localStorage.setItem('username', '–ê–Ω–Ω–∞');
localStorage.setItem('settings', JSON.stringify({theme: 'dark'}));

–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:
const username = localStorage.getItem('username');
const settings = JSON.parse(localStorage.getItem('settings'));

–£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:
localStorage.removeItem('username');
localStorage.clear(); // —É–¥–∞–ª–∏—Ç—å –≤—Å–µ

–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏:
if (typeof(Storage) !== "undefined") {
  // LocalStorage –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
}

–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –∏–∑–º–µ–Ω–µ–Ω–∏—è:
window.addEventListener('storage', (e) => {
  console.log('–ò–∑–º–µ–Ω–∏–ª—Å—è –∫–ª—é—á:', e.key);
});

–í–∞–∂–Ω–æ: LocalStorage —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏!`,
    taskTitle: "* –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫.",
    expectedOutput: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è —Ç–µ–º–∞: dark, —è–∑—ã–∫: ru",
    initialCode: `// –°–∏–º—É–ª—è—Ü–∏—è localStorage –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const mockLocalStorage = {
  data: {},
  setItem(key, value) {
    this.data[key] = value;
  },
  getItem(key) {
    return this.data[key] || null;
  },
  removeItem(key) {
    delete this.data[key];
  }
};

// –ò—Å–ø–æ–ª—å–∑—É–µ–º mockLocalStorage –≤–º–µ—Å—Ç–æ localStorage –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const storage = mockLocalStorage;

// –°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userSettings = {
  theme: 'dark',
  language: 'ru',
  notifications: true
};

// –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ localStorage
// –ü–æ–º–Ω–∏—Ç–µ: localStorage —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏

// –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ localStorage
const loadedSettings = null; // –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∫–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏

// –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ
if (loadedSettings) {
  console.log("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è —Ç–µ–º–∞: " + loadedSettings.theme + ", —è–∑—ã–∫: " + loadedSettings.language);
} else {
  console.log("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫");
}`,
    solution: `const mockLocalStorage = {
  data: {},
  setItem(key, value) {
    this.data[key] = value;
  },
  getItem(key) {
    return this.data[key] || null;
  },
  removeItem(key) {
    delete this.data[key];
  }
};

const storage = mockLocalStorage;

const userSettings = {
  theme: 'dark',
  language: 'ru',
  notifications: true
};

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–∫ JSON —Å—Ç—Ä–æ–∫—É
storage.setItem('userSettings', JSON.stringify(userSettings));

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –ø–∞—Ä—Å–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const settingsString = storage.getItem('userSettings');
const loadedSettings = settingsString ? JSON.parse(settingsString) : null;

if (loadedSettings) {
  console.log("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è —Ç–µ–º–∞: " + loadedSettings.theme + ", —è–∑—ã–∫: " + loadedSettings.language);
} else {
  console.log("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫");
}`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JSON.stringify() –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –≤ —Å—Ç—Ä–æ–∫—É",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JSON.parse() –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ–±—ä–µ–∫—Ç",
      "üí° –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–¥ –ø–∞—Ä—Å–∏–Ω–≥–æ–º",
      "üí° localStorage.getItem() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null, –µ—Å–ª–∏ –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ]
  },
  {
    id: 23,
    name: "WeakMap –∏ WeakSet",
    description: "–ò–∑—É—á–∏—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Å–æ —Å–ª–∞–±—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏.",
    tutorial: `üìñ WeakMap –∏ WeakSet –≤ JavaScript

WeakMap –∏ WeakSet - –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Å–æ —Å–ª–∞–±—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç—ã.

WeakMap:
const wm = new WeakMap();
const obj = {};
wm.set(obj, '–∑–Ω–∞—á–µ–Ω–∏–µ');
wm.get(obj); // '–∑–Ω–∞—á–µ–Ω–∏–µ'
wm.has(obj); // true
wm.delete(obj);

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ WeakMap:
‚Ä¢ –ö–ª—é—á–∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç–∞–º–∏
‚Ä¢ –ù–µ –∏—Ç–µ—Ä–∏—Ä—É–µ—Ç—Å—è
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞
‚Ä¢ –ù–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ size

WeakSet:
const ws = new WeakSet();
const obj1 = {};
ws.add(obj1);
ws.has(obj1); // true
ws.delete(obj1);

–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:
// –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
const privateData = new WeakMap();

class User {
  constructor(name) {
    privateData.set(this, {name});
  }
  
  getName() {
    return privateData.get(this).name;
  }
}`,
    taskTitle: "* –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å–æ–≤ *",
    taskDescription: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WeakMap –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –∫–ª–∞—Å—Å–∞.",
    expectedOutput: "–°—á–µ—Ç: 100, –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞: undefined",
    initialCode: `// –°–æ–∑–¥–∞–π—Ç–µ WeakMap –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
const privateData = new WeakMap();

class BankAccount {
  constructor(initialBalance) {
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –≤ WeakMap
    
  }
  
  getBalance() {
    // –ü–æ–ª—É—á–∏—Ç–µ –±–∞–ª–∞–Ω—Å –∏–∑ WeakMap
    
  }
  
  deposit(amount) {
    // –ü–æ–ª—É—á–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å, —É–≤–µ–ª–∏—á—å—Ç–µ –µ–≥–æ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ
    
  }
  
  withdraw(amount) {
    const data = privateData.get(this);
    if (data.balance >= amount) {
      data.balance -= amount;
      return true;
    }
    return false;
  }
}

const account = new BankAccount(100);
console.log("–°—á–µ—Ç: " + account.getBalance());

// –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –¥–∞–Ω–Ω—ã–º
console.log("–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞: " + account.balance);`,
    solution: `const privateData = new WeakMap();

class BankAccount {
  constructor(initialBalance) {
    privateData.set(this, {balance: initialBalance});
  }
  
  getBalance() {
    return privateData.get(this).balance;
  }
  
  deposit(amount) {
    const data = privateData.get(this);
    data.balance += amount;
  }
  
  withdraw(amount) {
    const data = privateData.get(this);
    if (data.balance >= amount) {
      data.balance -= amount;
      return true;
    }
    return false;
  }
}

const account = new BankAccount(100);
console.log("–°—á–µ—Ç: " + account.getBalance());
console.log("–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞: " + account.balance);`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WeakMap.set(this, data) –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WeakMap.get(this) –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
      "üí° –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –∏–∑–≤–Ω–µ –∫–ª–∞—Å—Å–∞",
      "üí° WeakMap –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞–µ—Ç—Å—è –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞"
    ]
  },
  {
    id: 24,
    name: "Symbol –∏ –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã",
    description: "–ò–∑—É—á–∏—Ç–µ Symbol –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏—Ç–µ—Ä–∞—Ç–æ—Ä–æ–≤.",
    tutorial: `üìñ Symbol –∏ –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã –≤ JavaScript

Symbol - —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö.

–°–æ–∑–¥–∞–Ω–∏–µ Symbol:
const sym1 = Symbol();
const sym2 = Symbol('–æ–ø–∏—Å–∞–Ω–∏–µ');
const sym3 = Symbol('–æ–ø–∏—Å–∞–Ω–∏–µ');
sym2 !== sym3 // true, –∫–∞–∂–¥—ã–π Symbol —É–Ω–∏–∫–∞–ª–µ–Ω

Symbol –∫–∞–∫ –∫–ª—é—á –æ–±—ä–µ–∫—Ç–∞:
const obj = {};
const sym = Symbol('key');
obj[sym] = '–∑–Ω–∞—á–µ–Ω–∏–µ';

–ò—Ç–µ—Ä–∞—Ç–æ—Ä—ã:
const iterable = {
  data: [1, 2, 3],
  [Symbol.iterator]() {
    let index = 0;
    return {
      next: () => {
        if (index < this.data.length) {
          return {value: this.data[index++], done: false};
        }
        return {done: true};
      }
    };
  }
};

for (const item of iterable) {
  console.log(item); // 1, 2, 3
}`,
    taskTitle: "* –°–æ–∑–¥–∞–Ω–∏–µ –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Range —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –∏—Ç–µ—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ —á–∏—Å–µ–ª.",
    expectedOutput: "–ß–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 5: 1, 2, 3, 4, 5",
    initialCode: `class Range {
  constructor(start, end) {
    this.start = start;
    this.end = end;
  }
  
  // –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ Symbol.iterator
  [Symbol.iterator]() {
    let current = this.start;
    const end = this.end;
    
    return {
      next() {
        // –†–µ–∞–ª–∏–∑—É–π—Ç–µ –ª–æ–≥–∏–∫—É –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞
        // –î–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å {value: —á–∏—Å–ª–æ, done: false} –∏–ª–∏ {done: true}
        
      }
    };
  }
}

const range = new Range(1, 5);
const numbers = [];

// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ for...of –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞
for (const num of range) {
  numbers.push(num);
}

console.log("–ß–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 5: " + numbers.join(", "));`,
    solution: `class Range {
  constructor(start, end) {
    this.start = start;
    this.end = end;
  }
  
  [Symbol.iterator]() {
    let current = this.start;
    const end = this.end;
    
    return {
      next() {
        if (current <= end) {
          return {value: current++, done: false};
        }
        return {done: true};
      }
    };
  }
}

const range = new Range(1, 5);
const numbers = [];

for (const num of range) {
  numbers.push(num);
}

console.log("–ß–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 5: " + numbers.join(", "));`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ [Symbol.iterator]() –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞",
      "üí° –ú–µ—Ç–æ–¥ next() –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–±—ä–µ–∫—Ç —Å value –∏ done",
      "üí° done: false –æ–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏—Ç–µ—Ä–∞—Ü–∏–∏",
      "üí° done: true –æ–∑–Ω–∞—á–∞–µ—Ç –∫–æ–Ω–µ—Ü –∏—Ç–µ—Ä–∞—Ü–∏–∏"
    ]
  },
  {
    id: 25,
    name: "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã",
    description: "–ò–∑—É—á–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –¥–ª—è –ª–µ–Ω–∏–≤–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π.",
    tutorial: `üìñ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –≤ JavaScript

–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã - —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.

–°–æ–∑–¥–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞:
function* simpleGenerator() {
  yield 1;
  yield 2;
  yield 3;
}

const gen = simpleGenerator();
console.log(gen.next()); // {value: 1, done: false}
console.log(gen.next()); // {value: 2, done: false}

–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä:
function* infiniteNumbers() {
  let num = 1;
  while (true) {
    yield num++;
  }
}

–î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞:
function* gen1() {
  yield 1;
  yield 2;
}

function* gen2() {
  yield* gen1();
  yield 3;
}

–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
function* paramGenerator() {
  const x = yield '–≤–≤–µ–¥–∏—Ç–µ x';
  const y = yield '–≤–≤–µ–¥–∏—Ç–µ y';
  return x + y;
}`,
    taskTitle: "* –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –§–∏–±–æ–Ω–∞—á—á–∏ *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —á–∏—Å–µ–ª –§–∏–±–æ–Ω–∞—á—á–∏.",
    expectedOutput: "–ü–µ—Ä–≤—ã–µ 7 —á–∏—Å–µ–ª –§–∏–±–æ–Ω–∞—á—á–∏: 0, 1, 1, 2, 3, 5, 8",
    initialCode: `// –°–æ–∑–¥–∞–π—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä fibonacci
function* fibonacci() {
  let a = 0;
  let b = 1;
  
  // –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ —á–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏
  while (true) {
    // –í—ã–¥–∞–π—Ç–µ —Ç–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ a
    
    // –í—ã—á–∏—Å–ª–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —á–∏—Å–ª–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    
  }
}

// –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä–≤—ã–µ 7 —á–∏—Å–µ–ª –§–∏–±–æ–Ω–∞—á—á–∏
const fibGen = fibonacci();
const fibNumbers = [];

for (let i = 0; i < 7; i++) {
  const result = fibGen.next();
  fibNumbers.push(result.value);
}

console.log("–ü–µ—Ä–≤—ã–µ 7 —á–∏—Å–µ–ª –§–∏–±–æ–Ω–∞—á—á–∏: " + fibNumbers.join(", "));`,
    solution: `function* fibonacci() {
  let a = 0;
  let b = 1;
  
  while (true) {
    yield a;
    [a, b] = [b, a + b];
  }
}

const fibGen = fibonacci();
const fibNumbers = [];

for (let i = 0; i < 7; i++) {
  const result = fibGen.next();
  fibNumbers.push(result.value);
}

console.log("–ü–µ—Ä–≤—ã–µ 7 —á–∏—Å–µ–ª –§–∏–±–æ–Ω–∞—á—á–∏: " + fibNumbers.join(", "));`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ function* –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ yield –¥–ª—è –≤—ã–¥–∞—á–∏ –∑–Ω–∞—á–µ–Ω–∏–π",
      "üí° –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è [a, b] = [b, a + b] –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π",
      "üí° while (true) —Å–æ–∑–¥–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä"
    ]
  },
  {
    id: 26,
    name: "Proxy –∏ Reflect",
    description: "–ò–∑—É—á–∏—Ç–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –æ–ø–µ—Ä–∞—Ü–∏–π —Å –æ–±—ä–µ–∫—Ç–∞–º–∏.",
    tutorial: `üìñ Proxy –∏ Reflect –≤ JavaScript

Proxy –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏.

–°–æ–∑–¥–∞–Ω–∏–µ Proxy:
const target = {name: '–ê–Ω–Ω–∞'};
const proxy = new Proxy(target, {
  get(obj, prop) {
    console.log(\`–ß—Ç–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ \${prop}\`);
    return obj[prop];
  },
  set(obj, prop, value) {
    console.log(\`–ó–∞–ø–∏—Å—å —Å–≤–æ–π—Å—Ç–≤–∞ \${prop} = \${value}\`);
    obj[prop] = value;
    return true;
  }
});

–í–∞–ª–∏–¥–∞—Ü–∏—è —Å Proxy:
const user = new Proxy({}, {
  set(obj, prop, value) {
    if (prop === 'age' && typeof value !== 'number') {
      throw new Error('–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º');
    }
    obj[prop] = value;
    return true;
  }
});

Reflect API:
Reflect.get(obj, 'prop');
Reflect.set(obj, 'prop', value);
Reflect.has(obj, 'prop');
Reflect.deleteProperty(obj, 'prop');`,
    taskTitle: "* –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ Proxy –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å–≤–æ–π—Å—Ç–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
    expectedOutput: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: –ú–∏—Ö–∞–∏–ª, –≤–æ–∑—Ä–∞—Å—Ç 30. –û—à–∏–±–∫–∞: –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º",
    initialCode: `// –°–æ–∑–¥–∞–π—Ç–µ Proxy –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–∞ User
function createValidatedUser() {
  return new Proxy({}, {
    set(target, property, value) {
      // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è —Å–≤–æ–π—Å—Ç–≤–∞ 'name'
      if (property === 'name') {
        if (typeof value !== 'string' || value.length < 2) {
          throw new Error('–ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –¥–ª–∏–Ω–æ–π –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞');
        }
      }
      
      // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è —Å–≤–æ–π—Å—Ç–≤–∞ 'age'
      if (property === 'age') {
        // –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É: –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º –∏ –±–æ–ª—å—à–µ 0
        
      }
      
      // –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      target[property] = value;
      return true;
    },
    
    get(target, property) {
      // –í–µ—Ä–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
      return target[property];
    }
  });
}

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
const user1 = createValidatedUser();
user1.name = '–ú–∏—Ö–∞–∏–ª';
user1.age = 30;

console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: " + user1.name + ", –≤–æ–∑—Ä–∞—Å—Ç " + user1.age);

// –¢–µ—Å—Ç —Å –æ—à–∏–±–∫–æ–π
const user2 = createValidatedUser();
try {
  user2.age = -5;
} catch (error) {
  console.log("–û—à–∏–±–∫–∞: " + error.message);
}`,
    solution: `function createValidatedUser() {
  return new Proxy({}, {
    set(target, property, value) {
      if (property === 'name') {
        if (typeof value !== 'string' || value.length < 2) {
          throw new Error('–ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –¥–ª–∏–Ω–æ–π –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞');
        }
      }
      
      if (property === 'age') {
        if (typeof value !== 'number' || value <= 0) {
          throw new Error('–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º');
        }
      }
      
      target[property] = value;
      return true;
    },
    
    get(target, property) {
      return target[property];
    }
  });
}

const user1 = createValidatedUser();
user1.name = '–ú–∏—Ö–∞–∏–ª';
user1.age = 30;

console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: " + user1.name + ", –≤–æ–∑—Ä–∞—Å—Ç " + user1.age);

const user2 = createValidatedUser();
try {
  user2.age = -5;
} catch (error) {
  console.log("–û—à–∏–±–∫–∞: " + error.message);
}`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ new Proxy(target, handler) –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–∫—Å–∏",
      "üí° –ú–µ—Ç–æ–¥ set —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Å–≤–æ–π—Å—Ç–≤–∞",
      "üí° –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ typeof value –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–∏–ø–∞",
      "üí° –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ true –∏–∑ set –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π –∑–∞–ø–∏—Å–∏"
    ]
  },
  {
    id: 27,
    name: "Web Workers",
    description: "–ò–∑—É—á–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ JavaScript –≤ —Ñ–æ–Ω–æ–≤—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö.",
    tutorial: `üìñ Web Workers –≤ JavaScript

Web Workers –ø–æ–∑–≤–æ–ª—è—é—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å JavaScript –≤ —Ñ–æ–Ω–æ–≤—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö.

–°–æ–∑–¥–∞–Ω–∏–µ Worker:
// main.js
const worker = new Worker('worker.js');

worker.postMessage({data: 'hello'});

worker.onmessage = function(e) {
  console.log('–ü–æ–ª—É—á–µ–Ω–æ:', e.data);
};

// worker.js
self.onmessage = function(e) {
  const data = e.data;
  // –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ç—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
  const result = heavyCalculation(data);
  self.postMessage(result);
};

–ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö:
worker.postMessage({
  command: 'start',
  data: [1, 2, 3, 4, 5]
});

–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ Worker:
worker.terminate();

–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:
worker.onerror = function(error) {
  console.error('–û—à–∏–±–∫–∞ –≤ Worker:', error);
};`,
    taskTitle: "* –°–∏–º—É–ª—è—Ü–∏—è Web Worker *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ —Å–∏–º—É–ª—è—Ü–∏—é Web Worker –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—É–º–º—ã –º–∞—Å—Å–∏–≤–∞.",
    expectedOutput: "–í—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞—á–∞—Ç—ã. –†–µ–∑—É–ª—å—Ç–∞—Ç: 15",
    initialCode: `// –°–∏–º—É–ª—è—Ü–∏—è Web Worker API
class MockWorker {
  constructor(workerFunction) {
    this.workerFunction = workerFunction;
    this.onmessage = null;
  }
  
  postMessage(data) {
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É
    setTimeout(() => {
      const result = this.workerFunction(data);
      if (this.onmessage) {
        this.onmessage({data: result});
      }
    }, 100);
  }
}

// –§—É–Ω–∫—Ü–∏—è "–≤–æ—Ä–∫–µ—Ä–∞" –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—É–º–º—ã
function workerFunction(messageData) {
  const numbers = messageData.numbers;
  let sum = 0;
  
  // –í—ã—á–∏—Å–ª–∏—Ç–µ —Å—É–º–º—É –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª
  for (const num of numbers) {
    
  }
  
  return {
    operation: 'sum',
    result: sum
  };
}

// –°–æ–∑–¥–∞–π—Ç–µ "–≤–æ—Ä–∫–µ—Ä"
const worker = new MockWorker(workerFunction);

// –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
worker.onmessage = function(e) {
  const data = e.data;
  console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç: " + data.result);
};

// –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤–æ—Ä–∫–µ—Ä—É
console.log("–í—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞—á–∞—Ç—ã");
worker.postMessage({
  numbers: [1, 2, 3, 4, 5]
});`,
    solution: `class MockWorker {
  constructor(workerFunction) {
    this.workerFunction = workerFunction;
    this.onmessage = null;
  }
  
  postMessage(data) {
    setTimeout(() => {
      const result = this.workerFunction(data);
      if (this.onmessage) {
        this.onmessage({data: result});
      }
    }, 100);
  }
}

function workerFunction(messageData) {
  const numbers = messageData.numbers;
  let sum = 0;
  
  for (const num of numbers) {
    sum += num;
  }
  
  return {
    operation: 'sum',
    result: sum
  };
}

const worker = new MockWorker(workerFunction);

worker.onmessage = function(e) {
  const data = e.data;
  console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç: " + data.result);
};

console.log("–í—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞—á–∞—Ç—ã");
worker.postMessage({
  numbers: [1, 2, 3, 4, 5]
});`,
    hints: [
      "üí° Web Worker –æ–±—â–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ postMessage –∏ onmessage",
      "üí° –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –º–µ–∂–¥—É –ø–æ—Ç–æ–∫–∞–º–∏",
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª for...of –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è",
      "üí° Worker –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ postMessage"
    ]
  },
  {
    id: 28,
    name: "Service Workers",
    description: "–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã Service Workers –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏ PWA.",
    tutorial: `üìñ Service Workers –≤ JavaScript

Service Workers —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ –ø—Ä–æ–∫—Å–∏ –º–µ–∂–¥—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –∏ —Å–µ—Ç—å—é.

–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker:
if ('serviceWorker' in navigator) {
  navigator.serviceWorker.register('/sw.js')
    .then(registration => {
      console.log('SW –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
    });
}

–°–æ–±—ã—Ç–∏—è –≤ Service Worker:
// sw.js
self.addEventListener('install', event => {
  console.log('Service Worker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
});

self.addEventListener('fetch', event => {
  event.respondWith(
    caches.match(event.request)
      .then(response => {
        return response || fetch(event.request);
      })
  );
});

–ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ:
self.addEventListener('install', event => {
  event.waitUntil(
    caches.open('v1').then(cache => {
      return cache.addAll(['/index.html', '/app.js']);
    })
  );
});

–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–µ—à–∞:
self.addEventListener('activate', event => {
  // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–µ—à–µ–π
});`,
    taskTitle: "* –°–∏–º—É–ª—è—Ü–∏—è Service Worker *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑–æ–≤—É—é –ª–æ–≥–∏–∫—É Service Worker –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤.",
    expectedOutput: "SW —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ó–∞–ø—Ä–æ—Å /api/data: –Ω–∞–π–¥–µ–Ω –≤ –∫–µ—à–µ. –ó–∞–ø—Ä–æ—Å /new-api: –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Å–µ—Ç–∏",
    initialCode: `// –°–∏–º—É–ª—è—Ü–∏—è Service Worker API
class MockServiceWorker {
  constructor() {
    this.cache = new Map();
    this.listeners = new Map();
  }
  
  addEventListener(eventType, handler) {
    if (!this.listeners.has(eventType)) {
      this.listeners.set(eventType, []);
    }
    this.listeners.get(eventType).push(handler);
  }
  
  triggerEvent(eventType, eventData) {
    const handlers = this.listeners.get(eventType) || [];
    handlers.forEach(handler => handler(eventData));
  }
  
  // –°–∏–º—É–ª—è—Ü–∏—è –∫–µ—à–∞
  addToCache(url, response) {
    this.cache.set(url, response);
  }
  
  getFromCache(url) {
    return this.cache.get(url);
  }
}

// –°–æ–∑–¥–∞–π—Ç–µ mock Service Worker
const sw = new MockServiceWorker();

// –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è install
sw.addEventListener('install', (event) => {
  // –î–æ–±–∞–≤—å—Ç–µ –≤ –∫–µ—à —Ä–µ—Å—É—Ä—Å '/api/data' —Å –æ—Ç–≤–µ—Ç–æ–º 'cached data'
  
  console.log('SW —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
});

// –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è fetch
sw.addEventListener('fetch', (event) => {
  const url = event.request.url;
  
  // –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ä–µ—Å—É—Ä—Å –≤ –∫–µ—à–µ
  const cachedResponse = sw.getFromCache(url);
  
  if (cachedResponse) {
    console.log("–ó–∞–ø—Ä–æ—Å " + url + ": –Ω–∞–π–¥–µ–Ω –≤ –∫–µ—à–µ");
  } else {
    console.log("–ó–∞–ø—Ä–æ—Å " + url + ": –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Å–µ—Ç–∏");
  }
});

// –°–∏–º—É–ª–∏—Ä—É–π—Ç–µ —Å–æ–±—ã—Ç–∏—è
sw.triggerEvent('install', {});
sw.triggerEvent('fetch', {request: {url: '/api/data'}});
sw.triggerEvent('fetch', {request: {url: '/new-api'}});`,
    solution: `class MockServiceWorker {
  constructor() {
    this.cache = new Map();
    this.listeners = new Map();
  }
  
  addEventListener(eventType, handler) {
    if (!this.listeners.has(eventType)) {
      this.listeners.set(eventType, []);
    }
    this.listeners.get(eventType).push(handler);
  }
  
  triggerEvent(eventType, eventData) {
    const handlers = this.listeners.get(eventType) || [];
    handlers.forEach(handler => handler(eventData));
  }
  
  addToCache(url, response) {
    this.cache.set(url, response);
  }
  
  getFromCache(url) {
    return this.cache.get(url);
  }
}

const sw = new MockServiceWorker();

sw.addEventListener('install', (event) => {
  sw.addToCache('/api/data', 'cached data');
  console.log('SW —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
});

sw.addEventListener('fetch', (event) => {
  const url = event.request.url;
  const cachedResponse = sw.getFromCache(url);
  
  if (cachedResponse) {
    console.log("–ó–∞–ø—Ä–æ—Å " + url + ": –Ω–∞–π–¥–µ–Ω –≤ –∫–µ—à–µ");
  } else {
    console.log("–ó–∞–ø—Ä–æ—Å " + url + ": –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Å–µ—Ç–∏");
  }
});

sw.triggerEvent('install', {});
sw.triggerEvent('fetch', {request: {url: '/api/data'}});
sw.triggerEvent('fetch', {request: {url: '/new-api'}});`,
    hints: [
      "üí° Service Worker –∫–µ—à–∏—Ä—É–µ—Ç —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Ä–∞–±–æ—Ç—ã",
      "üí° addEventListener —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π",
      "üí° –°–æ–±—ã—Ç–∏–µ install –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ SW",
      "üí° –°–æ–±—ã—Ç–∏–µ fetch –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Å–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã"
    ]
  },
  {
    id: 29,
    name: "–§–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å",
    description: "–û–±—ä–µ–¥–∏–Ω–∏—Ç–µ –≤—Å–µ –∏–∑—É—á–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –≤ –æ–¥–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ.",
    tutorial: `üìñ –§–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å

–í —ç—Ç–æ–º —É—Ä–æ–≤–Ω–µ –≤—ã –æ–±—ä–µ–¥–∏–Ω–∏—Ç–µ –≤—Å–µ –∏–∑—É—á–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏:
‚Ä¢ ES6+ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å (–∫–ª–∞—Å—Å—ã, –º–æ–¥—É–ª–∏, async/await)
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ (Map, Set, JSON)
‚Ä¢ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å (Promise, fetch)
‚Ä¢ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ
‚Ä¢ –ú–µ—Ç–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (Proxy, Symbol)

–°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ —Å:
‚Ä¢ –ö–ª–∞—Å—Å–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
‚Ä¢ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –í–∞–ª–∏–¥–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ Proxy
‚Ä¢ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤ localStorage
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫

–≠—Ç–æ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ –ø–æ–∫–∞–∂–µ—Ç –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –≤–ª–∞–¥–µ–Ω–∏—è JavaScript!

–£–¥–∞—á–∏, –º–∞—Å—Ç–µ—Ä –∫–æ–¥–∞!`,
    taskTitle: "* –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ *",
    taskDescription: "–°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π, –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å—é.",
    expectedOutput: "–ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: –ò–∑—É—á–∏—Ç—å React. –ó–∞–¥–∞—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –∫–µ—à–∞: 1. –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: –ò–∑—É—á–∏—Ç—å React",
    initialCode: `// –°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏

// 1. –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Task
class Task {
  constructor(id, title, completed = false) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–≤–æ–π—Å—Ç–≤–∞
    
  }
  
  complete() {
    // –ü–æ–º–µ—Ç—å—Ç–µ –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é
    
  }
  
  toJSON() {
    // –í–µ—Ä–Ω–∏—Ç–µ –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    
  }
}

// 2. –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å TaskManager —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ Proxy
class TaskManager {
  constructor() {
    this.tasks = new Map();
    this.nextId = 1;
    
    // –û–±–µ—Ä–Ω–∏—Ç–µ –≤ Proxy –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    return new Proxy(this, {
      set(target, property, value) {
        // –î–æ–±–∞–≤—å—Ç–µ –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤
        
        target[property] = value;
        return true;
      }
    });
  }
  
  async createTask(title) {
    // –°–æ–∑–¥–∞–π—Ç–µ –∑–∞–¥–∞—á—É —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
    if (!title || title.length < 3) {
      throw new Error('–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ 2 —Å–∏–º–≤–æ–ª–æ–≤');
    }
    
    const task = new Task(this.nextId++, title);
    this.tasks.set(task.id, task);
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ localStorage
    await this.saveToStorage();
    
    console.log("–ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: " + title);
    return task;
  }
  
  async loadFromStorage() {
    // –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∑–∞–¥–∞—á–∏ –∏–∑ localStorage
    
  }
  
  async saveToStorage() {
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∑–∞–¥–∞—á–∏ –≤ localStorage
    
  }
  
  completeTask(id) {
    const task = this.tasks.get(id);
    if (task) {
      task.complete();
      console.log("–ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: " + task.title);
    }
  }
}

// 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
async function testTaskManager() {
  const manager = new TaskManager();
  
  // –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–µ—à–∞
  await manager.loadFromStorage();
  
  // –°–æ–∑–¥–∞–π—Ç–µ –∑–∞–¥–∞—á—É
  await manager.createTask("–ò–∑—É—á–∏—Ç—å React");
  
  // –ó–∞–≤–µ—Ä—à–∏—Ç–µ –∑–∞–¥–∞—á—É
  manager.completeTask(1);
}

// –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç
testTaskManager();`,
    solution: `class Task {
  constructor(id, title, completed = false) {
    this.id = id;
    this.title = title;
    this.completed = completed;
    this.createdAt = new Date().toISOString();
  }
  
  complete() {
    this.completed = true;
  }
  
  toJSON() {
    return {
      id: this.id,
      title: this.title,
      completed: this.completed,
      createdAt: this.createdAt
    };
  }
}

class TaskManager {
  constructor() {
    this.tasks = new Map();
    this.nextId = 1;
    
    return new Proxy(this, {
      set(target, property, value) {
        if (property === 'nextId' && typeof value !== 'number') {
          throw new Error('nextId –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º');
        }
        target[property] = value;
        return true;
      }
    });
  }
  
  async createTask(title) {
    if (!title || title.length < 3) {
      throw new Error('–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ 2 —Å–∏–º–≤–æ–ª–æ–≤');
    }
    
    const task = new Task(this.nextId++, title);
    this.tasks.set(task.id, task);
    
    await this.saveToStorage();
    
    console.log("–ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: " + title);
    return task;
  }
  
  async loadFromStorage() {
    try {
      const stored = localStorage.getItem('tasks');
      if (stored) {
        const tasksData = JSON.parse(stored);
        for (const taskData of tasksData) {
          const task = new Task(taskData.id, taskData.title, taskData.completed);
          this.tasks.set(task.id, task);
        }
        this.nextId = Math.max(...Array.from(this.tasks.keys())) + 1;
        console.log("–ó–∞–¥–∞—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –∫–µ—à–∞: " + this.tasks.size);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
    }
  }
  
  async saveToStorage() {
    try {
      const tasksArray = Array.from(this.tasks.values()).map(task => task.toJSON());
      localStorage.setItem('tasks', JSON.stringify(tasksArray));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
    }
  }
  
  completeTask(id) {
    const task = this.tasks.get(id);
    if (task) {
      task.complete();
      console.log("–ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: " + task.title);
    }
  }
}

// –°–∏–º—É–ª—è—Ü–∏—è localStorage
const mockStorage = {
  data: {},
  getItem(key) { return this.data[key] || null; },
  setItem(key, value) { this.data[key] = value; }
};
const localStorage = mockStorage;

async function testTaskManager() {
  const manager = new TaskManager();
  await manager.loadFromStorage();
  await manager.createTask("–ò–∑—É—á–∏—Ç—å React");
  manager.completeTask(1);
}

testTaskManager();`,
    hints: [
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Map –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á –ø–æ ID",
      "üí° Proxy –Ω—É–∂–µ–Ω –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤",
      "üí° JSON.stringify/parse –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å localStorage",
      "üí° async/await –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º",
      "üí° –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–º–æ—â—å—é try/catch"
    ]
  }
];
